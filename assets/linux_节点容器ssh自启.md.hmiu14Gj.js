import{_ as s,c as a,o as n,a4 as l}from"./chunks/framework.CCJHkvW2.js";const d=JSON.parse('{"title":"节点容器ssh自启","description":"","frontmatter":{},"headers":[],"relativePath":"linux/节点容器ssh自启.md","filePath":"linux/节点容器ssh自启.md","lastUpdated":1713833896000}'),e={name:"linux/节点容器ssh自启.md"},o=l(`<h1 id="节点容器ssh自启" tabindex="-1">节点容器ssh自启 <a class="header-anchor" href="#节点容器ssh自启" aria-label="Permalink to &quot;节点容器ssh自启&quot;">​</a></h1><h2 id="ubuntu-ssh-配置" tabindex="-1">ubuntu ssh 配置 <a class="header-anchor" href="#ubuntu-ssh-配置" aria-label="Permalink to &quot;ubuntu ssh 配置&quot;">​</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">RUN</span><span style="color:#C3E88D;"> apt-get</span><span style="color:#C3E88D;"> update</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#FFCB6B;"> apt-get</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> net-tools</span><span style="color:#C3E88D;"> openssh-server</span><span style="color:#C3E88D;"> -y</span><span style="color:#C3E88D;"> --no-install-recommends</span></span>
<span class="line"><span style="color:#FFCB6B;">RUN</span><span style="color:#C3E88D;"> echo</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">Port 22</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> &gt;&gt;</span><span style="color:#C3E88D;"> /etc/ssh/sshd_config</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">RUN</span><span style="color:#C3E88D;"> echo</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">PermitRootLogin yes</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> &gt;&gt;</span><span style="color:#C3E88D;"> /etc/ssh/sshd_config</span></span>
<span class="line"><span style="color:#FFCB6B;">RUN</span><span style="color:#C3E88D;"> echo</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">UsePAM no</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> &gt;&gt;</span><span style="color:#C3E88D;"> /etc/ssh/sshd_config</span></span>
<span class="line"><span style="color:#FFCB6B;">RUN</span><span style="color:#C3E88D;"> echo</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">service ssh start</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> &gt;&gt;</span><span style="color:#C3E88D;">  /root/.bashrc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="docker启动-shell文件" tabindex="-1">docker启动 shell文件 <a class="header-anchor" href="#docker启动-shell文件" aria-label="Permalink to &quot;docker启动 shell文件&quot;">​</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="color:#BABED8;">test</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">qazwsx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># docker run -d -p 11002:22 -p 11003:8888 --name test-ubuntu 172.26.25.7:8070/custom/ubuntu:20.04-py3.9 /bin/bash -c &quot;/usr/bin/supervisord&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> -d</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> 11002:22</span><span style="color:#C3E88D;"> --name</span><span style="color:#C3E88D;"> testenv2</span><span style="color:#C3E88D;"> testenv:latest</span><span style="color:#C3E88D;"> /bin/bash</span><span style="color:#C3E88D;"> -c</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">/usr/sbin/sshd;while true; do sleep 1; done</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> exec</span><span style="color:#C3E88D;"> -it</span><span style="color:#C3E88D;"> testenv2</span><span style="color:#C3E88D;"> /bin/bash</span><span style="color:#C3E88D;"> -c</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">echo root:</span><span style="color:#BABED8;">$test</span><span style="color:#C3E88D;"> | chpasswd</span><span style="color:#89DDFF;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,5),p=[o];function t(r,c,i,D,y,h){return n(),a("div",null,p)}const b=s(e,[["render",t]]);export{d as __pageData,b as default};
