import{_ as s,c as n,o as a,a4 as l,dO as p,dP as o,dQ as e,dR as c,dS as r,dT as t,dU as i,dA as y}from"./chunks/framework.CCJHkvW2.js";const v=JSON.parse('{"title":"milvus 向量数据库","description":"","frontmatter":{},"headers":[],"relativePath":"tool/milvus.md","filePath":"tool/milvus.md","lastUpdated":1711087029000}'),F={name:"tool/milvus.md"},D=l('<h1 id="milvus-向量数据库" tabindex="-1">milvus 向量数据库 <a class="header-anchor" href="#milvus-向量数据库" aria-label="Permalink to &quot;milvus 向量数据库&quot;">​</a></h1><h2 id="架构图" tabindex="-1">架构图 <a class="header-anchor" href="#架构图" aria-label="Permalink to &quot;架构图&quot;">​</a></h2><p><img src="'+p+'" alt="An image"></p><p><img src="'+o+'" alt="An image"></p><p><img src="'+e+'" alt="An image"></p><p><img src="'+c+'" alt="An image"></p><p><img src="'+r+'" alt="An image"></p><h2 id="组件" tabindex="-1">组件 <a class="header-anchor" href="#组件" aria-label="Permalink to &quot;组件&quot;">​</a></h2><p>Milvus创建于2019年，唯一的目标是：存储、索引和管理由深度神经网络和其他机器学习(ML)模型生成的大量嵌入向量embedding vectors。</p><p>存储对象：向量</p><p>Milvus能够通过计算两个向量的相似距离来分析它们之间的相关性，如果两个嵌入向量非常相似，则意味着原始数据源也是相似的。</p><p><img src="'+t+`" alt="An image"></p><p>虽然架构图上没有将 Milvus 所有的依赖都标注在图片中，但是通过阅读目录中的 docker-compose.yml 文件，我们可以看到，这套本地部署示例中，实际上还蛮复杂的，包含了下面六个部分：</p><p>•数据存储 Etcd：quay.io/coreos/etcd:v3.5.0</p><p>•对象存储 Minio：minio/minio:RELEASE.2020-12-03T00-03-10Z</p><p>•向量数据库 Milvus：milvusdb/milvus:v2.0.2</p><p>•关系数据库 MySQL：mysql:5.7</p><p>•图片搜索应用：milvusbootcamp/img-search-server:towhee0.6</p><p>•用户前端界面：milvusbootcamp/img-search-client:1.0</p><p>在上面架构图片中，我们能够清晰的看到应用被分为了“五层”，除去偏抽象不涉及具体某个应用的“用户交互层”之外：</p><p>•“前端服务”：包含了 Nginx 和使用 Node.js 构建好的 React 单页面应用，提供浏览器内的界面交互，后端服务计算信息结果展示。</p><p>•“推理服务”：包含了使用 Towhee 0.6 和 ResNet50 模型，以及 FastAPI 搭建的 AI 推理服务，用于将用户提交的图片数据进行向量转换。</p><p>•“向量检索服务”：包含了使用 Milvus 2.x 、Etcd、MinIO 搭建的简单版本的向量数据查询程序，用于将用户提交单张图片的向量与库存信息进行相似度匹配，得到最相似的一组向量结果。</p><p>•“关联检索服务”：包含了 MySQL 数据库，用于将 Milvus 查找到的结果进行文件反查，找到相似向量结果背后代表的具体是哪些图片。</p><h3 id="四大角色" tabindex="-1">四大角色 <a class="header-anchor" href="#四大角色" aria-label="Permalink to &quot;四大角色&quot;">​</a></h3><p>Access layer：主要功能验证请求参数和合并返回结果</p><p>Coordinator service： 如系统大脑，分配任务；包括集群拓扑管理、负载均衡、时间戳生成、数据声明和数据管理等</p><p>Worker nodes： 执行具体工作节点</p><p>Storage：数据存储和持久化</p><p>该系统分为四个层次:</p><p>访问层:访问层由一组无状态代理组成，作为系统的前端层和用户的端点。</p><p>协调服务:协调服务将任务分配给工作节点，并发挥系统大脑的作用。</p><p>工作节点:工作节点就像手臂和腿，是哑执行器，遵循协调器服务的指令，执行用户触发的DML/DDL命令。</p><p>存储:存储是系统的骨架，负责数据持久性。它包括元存储、日志</p><h3 id="十一组件" tabindex="-1">十一组件 <a class="header-anchor" href="#十一组件" aria-label="Permalink to &quot;十一组件&quot;">​</a></h3><p>proxy：验证请求参数和合并返回结果</p><p>Root coordinator：处理DDL和DCL请求，如创建（删除）collection、partition、index，以及TSO (timestamp Oracle)管理</p><p>Query coordinator ：管理查询节点的拓扑结构和负载均衡，以及将growing的segmend切换到sealed</p><p>Data coordinator：管理数据节点的拓扑结构，维护元数据，并触发刷新、压缩和其他后台数据操作；如1）分配 segment 数据2）记录分配空间及其过期时间3）Segment flush 逻辑 4）哪些 channel 被哪些 Data Node 消费则需要 data coord 来做一个整体的分配</p><p>Index coordinator：管理索引结点的拓扑结构，建立索引，并维护索引元数据。</p><p>Data node：订阅日志代理获取增量日志数据，处理变更请求，将日志数据打包成日志快照，并存储在对象存储中。</p><p>Index node：建立索引文件，存储对象存储中</p><p>Query node： 订阅日志代理检索增量日志数据，将它们转化为growing segments，从对象存储加载历史数据，并在向量数据和标量数据之间运行混合搜索。</p><p>Meta storage（etcd）：存储了诸如collection schema、节点状态、消息消费检查点等元数据的快照。此外，Milvus还使用etcd进行服务注册和健康检查</p><p>Object storage：存储日志的快照文件、标量数据和矢量数据的索引文件以及中间查询结果。</p><p>Log broker：负责数据流的持久化、可靠异步查询的执行、事件通知以及查询结果的返回，还在Worker节点从系统故障中恢复时，确保增量数据的完整性。</p><h3 id="开发者工具" tabindex="-1">开发者工具 <a class="header-anchor" href="#开发者工具" aria-label="Permalink to &quot;开发者工具&quot;">​</a></h3><p>Milvus由丰富的api和工具支持，以促进DevOps。</p><p>Milvus有包装在Milvus API之上的客户端库，可用于从应用程序代码中以编程方式插入、删除和查询数据。</p><p>PyMilvus(<a href="https://github.com/milvus-io/pymilvus" target="_blank" rel="noreferrer">https://github.com/milvus-io/pymilvus</a>)</p><p>Node.js SDK(<a href="https://github.com/milvus-io/milvus-sdk-node" target="_blank" rel="noreferrer">https://github.com/milvus-io/milvus-sdk-node</a>)</p><p>Go SDK(<a href="https://github.com/milvus-io/milvus-sdk-go" target="_blank" rel="noreferrer">https://github.com/milvus-io/milvus-sdk-go</a>)</p><p>Java SDK(<a href="https://github.com/milvus-io/milvus-sdk-java" target="_blank" rel="noreferrer">https://github.com/milvus-io/milvus-sdk-java</a>)</p><h2 id="部署milvus" tabindex="-1">部署milvus <a class="header-anchor" href="#部署milvus" aria-label="Permalink to &quot;部署milvus&quot;">​</a></h2><h3 id="安装-milvus-core-minio-etcd" tabindex="-1">安装 milvus-core + Minio + etcd <a class="header-anchor" href="#安装-milvus-core-minio-etcd" aria-label="Permalink to &quot;安装 milvus-core + Minio + etcd&quot;">​</a></h3><p>使用 docker-compose 安装</p><p>下载地址(<a href="https://github.com/milvus-io/milvus/releases/download/v2.3.1/milvus-standalone-docker-compose.yml" target="_blank" rel="noreferrer">https://github.com/milvus-io/milvus/releases/download/v2.3.1/milvus-standalone-docker-compose.yml</a>)</p><p>wget下载部署文件</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">wget</span><span style="color:#C3E88D;"> https://github.com/milvus-io/milvus/releases/download/v2.3.1/milvus-standalone-docker-compose.yml</span><span style="color:#C3E88D;"> -O</span><span style="color:#C3E88D;"> docker-compose.yml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>文件内容</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">3.5</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  etcd</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    container_name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> milvus-etcd</span></span>
<span class="line"><span style="color:#F07178;">    image</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> quay.io/coreos/etcd:v3.5.5</span></span>
<span class="line"><span style="color:#F07178;">    environment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#C3E88D;"> ETCD_AUTO_COMPACTION_MODE=revision</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#C3E88D;"> ETCD_AUTO_COMPACTION_RETENTION=1000</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#C3E88D;"> ETCD_QUOTA_BACKEND_BYTES=4294967296</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#C3E88D;"> ETCD_SNAPSHOT_COUNT=50000</span></span>
<span class="line"><span style="color:#F07178;">    volumes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#C3E88D;"> \${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd</span></span>
<span class="line"><span style="color:#F07178;">    command</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd</span></span>
<span class="line"><span style="color:#F07178;">    healthcheck</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">      test</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CMD</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">etcdctl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">endpoint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">health</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F07178;">      interval</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> 30s</span></span>
<span class="line"><span style="color:#F07178;">      timeout</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> 20s</span></span>
<span class="line"><span style="color:#F07178;">      retries</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  minio</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    container_name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> milvus-minio</span></span>
<span class="line"><span style="color:#F07178;">    image</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> minio/minio:RELEASE.2023-03-20T20-16-18Z</span></span>
<span class="line"><span style="color:#F07178;">    environment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">      MINIO_ACCESS_KEY</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> minioadmin</span></span>
<span class="line"><span style="color:#F07178;">      MINIO_SECRET_KEY</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> minioadmin</span></span>
<span class="line"><span style="color:#F07178;">    ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">19001:9001</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">19000:9000</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    volumes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#C3E88D;"> \${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data</span></span>
<span class="line"><span style="color:#F07178;">    command</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> minio server /minio_data --console-address &quot;:9001&quot;</span></span>
<span class="line"><span style="color:#F07178;">    healthcheck</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">      test</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CMD</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">curl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">-f</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">http://localhost:9000/minio/health/live</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F07178;">      interval</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> 30s</span></span>
<span class="line"><span style="color:#F07178;">      timeout</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> 20s</span></span>
<span class="line"><span style="color:#F07178;">      retries</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  standalone</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    container_name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> milvus-standalone</span></span>
<span class="line"><span style="color:#F07178;">    image</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> milvusdb/milvus:v2.3.1</span></span>
<span class="line"><span style="color:#F07178;">    command</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">milvus</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">run</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">standalone</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F07178;">    environment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">      ETCD_ENDPOINTS</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> etcd:2379</span></span>
<span class="line"><span style="color:#F07178;">      MINIO_ADDRESS</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> minio:9000</span></span>
<span class="line"><span style="color:#F07178;">    volumes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#C3E88D;"> \${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus</span></span>
<span class="line"><span style="color:#F07178;">    healthcheck</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">      test</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CMD</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">curl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">-f</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">http://localhost:9091/healthz</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F07178;">      interval</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> 30s</span></span>
<span class="line"><span style="color:#F07178;">      start_period</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> 90s</span></span>
<span class="line"><span style="color:#F07178;">      timeout</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> 20s</span></span>
<span class="line"><span style="color:#F07178;">      retries</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 3</span></span>
<span class="line"><span style="color:#F07178;">    ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">19530:19530</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">19091:9091</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    depends_on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">etcd</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">minio</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">networks</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  default</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> milvus</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><p>部署</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#C3E88D;"> up</span><span style="color:#C3E88D;"> -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="部署-milvus-数据库查看工具" tabindex="-1">部署 milvus 数据库查看工具 <a class="header-anchor" href="#部署-milvus-数据库查看工具" aria-label="Permalink to &quot;部署 milvus 数据库查看工具&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> 8011:3000</span><span style="color:#C3E88D;">  -e</span><span style="color:#C3E88D;"> MILVUS_URL=172.26.27.23:19530</span><span style="color:#C3E88D;"> zilliz/attu:v2.2.6</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>访问地址(<a href="http://172.26.27.23:8011" target="_blank" rel="noreferrer">http://172.26.27.23:8011</a>)</p><p><img src="`+i+`" alt="An image"></p><h3 id="安装mysql" tabindex="-1">安装mysql <a class="header-anchor" href="#安装mysql" aria-label="Permalink to &quot;安装mysql&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> --name</span><span style="color:#C3E88D;"> zhangling-mysql</span><span style="color:#C3E88D;"> --restart=always</span><span style="color:#C3E88D;"> -v</span><span style="color:#C3E88D;"> /docker/mysql/conf:/etc/mysql/conf.d</span><span style="color:#C3E88D;"> -v</span><span style="color:#C3E88D;"> /docker/mysql/logs:/logs</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">-v</span><span style="color:#C3E88D;"> /docker/mysql/data:/var/lib/mysql</span><span style="color:#C3E88D;"> -e</span><span style="color:#C3E88D;"> MYSQL_ROOT_PASSWORD=Zhangling@</span><span style="color:#C3E88D;"> -e</span><span style="color:#C3E88D;"> TZ=Asia/Shanghai</span><span style="color:#C3E88D;"> -d</span><span style="color:#C3E88D;"> -i</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> 3306:3306</span><span style="color:#C3E88D;"> mysql:latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="安装milvusbootcamp-img-search-server2-0" tabindex="-1">安装milvusbootcamp/img-search-server2.0 <a class="header-anchor" href="#安装milvusbootcamp-img-search-server2-0" aria-label="Permalink to &quot;安装milvusbootcamp/img-search-server2.0&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> -d</span><span style="color:#C3E88D;"> -v</span><span style="color:#C3E88D;"> /docker/milvus/data/image_path:/data/image_path</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> 5000:5000</span><span style="color:#C3E88D;"> -e</span><span style="color:#C3E88D;"> MILVUS_HOST=</span><span style="color:#F78C6C;">172.26.27.23</span><span style="color:#C3E88D;"> -e</span><span style="color:#C3E88D;"> MILVUS_PORT=</span><span style="color:#F78C6C;">19530</span><span style="color:#C3E88D;"> -e</span><span style="color:#C3E88D;"> MYSQL_HOST=</span><span style="color:#F78C6C;">172.26.27.23</span><span style="color:#C3E88D;"> milvusbootcamp/img-search-server:2.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>修改部分文件</p><p>/app/src/milvus_helpers.py</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">import</span><span style="color:#C3E88D;"> sys</span></span>
<span class="line"><span style="color:#FFCB6B;">from</span><span style="color:#C3E88D;"> pymilvus_orm</span><span style="color:#C3E88D;"> import</span><span style="color:#C3E88D;"> connections</span></span>
<span class="line"><span style="color:#FFCB6B;">from</span><span style="color:#C3E88D;"> pymilvus_orm.types</span><span style="color:#C3E88D;"> import</span><span style="color:#C3E88D;"> DataType</span></span>
<span class="line"><span style="color:#FFCB6B;">from</span><span style="color:#C3E88D;"> pymilvus_orm.schema</span><span style="color:#C3E88D;"> import</span><span style="color:#C3E88D;"> FieldSchema,</span><span style="color:#C3E88D;"> CollectionSchema</span></span>
<span class="line"><span style="color:#FFCB6B;">from</span><span style="color:#C3E88D;"> pymilvus_orm.collection</span><span style="color:#C3E88D;"> import</span><span style="color:#C3E88D;"> Collection</span></span>
<span class="line"><span style="color:#FFCB6B;">from</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> import</span><span style="color:#C3E88D;"> MILVUS_HOST,</span><span style="color:#C3E88D;"> MILVUS_PORT,</span><span style="color:#C3E88D;"> VECTOR_DIMENSION,</span><span style="color:#C3E88D;"> METRIC_TYPE</span></span>
<span class="line"><span style="color:#FFCB6B;">from</span><span style="color:#C3E88D;"> pymilvus_orm</span><span style="color:#C3E88D;"> import</span><span style="color:#C3E88D;"> utility</span></span>
<span class="line"><span style="color:#FFCB6B;">from</span><span style="color:#C3E88D;"> logs</span><span style="color:#C3E88D;"> import</span><span style="color:#C3E88D;"> LOGGER</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">class</span><span style="color:#C3E88D;"> MilvusHelper:</span></span>
<span class="line"><span style="color:#FFCB6B;">    def</span><span style="color:#C3E88D;"> __init__</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">self</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">        try:</span></span>
<span class="line"><span style="color:#FFCB6B;">            self.collection</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> None</span></span>
<span class="line"><span style="color:#FFCB6B;">            connections.connect(host</span><span style="color:#C3E88D;">=MILVUS_HOST,</span><span style="color:#C3E88D;"> port=MILVUS_PORT</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.debug(</span><span style="color:#FFCB6B;">&quot;Successfully connect to Milvus with IP:{} and PORT:{}&quot;</span><span style="color:#FFCB6B;">.format(MILVUS_HOST,</span><span style="color:#C3E88D;"> MILVUS_PORT</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">        except</span><span style="color:#C3E88D;"> Exception</span><span style="color:#C3E88D;"> as</span><span style="color:#C3E88D;"> e:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.error(</span><span style="color:#FFCB6B;">&quot;Failed to connect Milvus: {}&quot;</span><span style="color:#FFCB6B;">.format(e</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            sys.exit(1</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">    def</span><span style="color:#C3E88D;"> set_collection</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">self,</span><span style="color:#C3E88D;"> collection_name</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">        try:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;set_collection&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#FFCB6B;"> self.has_collection(collection_name</span><span style="color:#BABED8;">):</span></span>
<span class="line"><span style="color:#FFCB6B;">                self.collection</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> Collection</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">collection_name</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">                LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;self.collection {}&quot;</span><span style="color:#FFCB6B;">.format(self.collection</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#BABED8;">            else:</span></span>
<span class="line"><span style="color:#FFCB6B;">                raise</span><span style="color:#C3E88D;"> Exception</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;There has no collection named:{}&quot;</span><span style="color:#FFCB6B;">.format(collection_name</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">        except</span><span style="color:#C3E88D;"> Exception</span><span style="color:#C3E88D;"> as</span><span style="color:#C3E88D;"> e:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.error(</span><span style="color:#FFCB6B;">&quot;Failed to load data to Milvus: {}&quot;</span><span style="color:#FFCB6B;">.format(e</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            sys.exit(1</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Return if Milvus has the collection</span></span>
<span class="line"><span style="color:#FFCB6B;">    def</span><span style="color:#C3E88D;"> has_collection</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">self,</span><span style="color:#C3E88D;"> collection_name</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">        try:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#C3E88D;"> utility.has_collection</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">collection_name</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">        except</span><span style="color:#C3E88D;"> Exception</span><span style="color:#C3E88D;"> as</span><span style="color:#C3E88D;"> e:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.error(</span><span style="color:#FFCB6B;">&quot;Failed to load data to Milvus: {}&quot;</span><span style="color:#FFCB6B;">.format(e</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            sys.exit(1</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Create milvus collection if not exists</span></span>
<span class="line"><span style="color:#FFCB6B;">    def</span><span style="color:#C3E88D;"> create_collection</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">self,</span><span style="color:#C3E88D;"> collection_name</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">        try:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;create_collection&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#FFCB6B;"> not</span><span style="color:#C3E88D;"> self.has_collection</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">collection_name</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">                LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;self.has_collection False&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">                field1</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> FieldSchema</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> dtype</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">DataType.INT64,</span><span style="color:#BABED8;"> descrition</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int64</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> is_primary</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">True,</span><span style="color:#BABED8;"> auto_id</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">True</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">                field2</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> FieldSchema</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">embedding</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> dtype</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">DataType.FLOAT_VECTOR,</span><span style="color:#BABED8;"> descrition</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">float vector</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span></span>
<span class="line"><span style="color:#BABED8;">                                     dim</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">VECTOR_DIMENSION,</span><span style="color:#BABED8;"> is_primary</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">False</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">                schema</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> CollectionSchema</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">fields</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">[field1,</span><span style="color:#FFCB6B;"> field2],</span><span style="color:#C3E88D;"> description=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">collection description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">                LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;schema{}&quot;</span><span style="color:#FFCB6B;">.format(schema</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">                self.collection</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> Collection</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">collection_name,</span><span style="color:#BABED8;"> schema</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">schema</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">                self.create_index(collection_name</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">修改点-加入这行</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#FFCB6B;">                LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;Create Milvus collection: {}&quot;</span><span style="color:#FFCB6B;">.format(self.collection</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">                LOGGER.debug(</span><span style="color:#FFCB6B;">&quot;Create Milvus collection: {}&quot;</span><span style="color:#FFCB6B;">.format(self.collection</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#BABED8;">            else:</span></span>
<span class="line"><span style="color:#FFCB6B;">                self.set_collection(collection_name</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;self.has_collection{}&quot;</span><span style="color:#FFCB6B;">.format(self.has_collection(collection_name</span><span style="color:#BABED8;">)))</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;self.has_collection{}&quot;</span><span style="color:#FFCB6B;">.format(collection_name</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;self.collection{}&quot;</span><span style="color:#FFCB6B;">.format(self.collection</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">OK</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">        except</span><span style="color:#C3E88D;"> Exception</span><span style="color:#C3E88D;"> as</span><span style="color:#C3E88D;"> e:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.error(</span><span style="color:#FFCB6B;">&quot;Failed to load data to Milvus: {}&quot;</span><span style="color:#FFCB6B;">.format(e</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            sys.exit(1</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Batch insert vectors to milvus collection</span></span>
<span class="line"><span style="color:#FFCB6B;">    def</span><span style="color:#C3E88D;"> insert</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">self,</span><span style="color:#C3E88D;"> collection_name,</span><span style="color:#C3E88D;"> vectors</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">        try:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;{}&quot;</span><span style="color:#FFCB6B;">.format(collection_name</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            self.create_collection(collection_name</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            self.set_collection(collection_name</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">修改点-加入这行</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#FFCB6B;">            data</span><span style="color:#C3E88D;"> =</span><span style="color:#BABED8;"> [vectors]</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;{}&quot;</span><span style="color:#FFCB6B;">.format(data</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            mr</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> self.collection.insert</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">data</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            ids</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> mr.primary_keys</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;{}&quot;</span><span style="color:#FFCB6B;">.format(ids</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#82AAFF;">            self.collection.load</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;self.collection.load()&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.debug(</span></span>
<span class="line"><span style="color:#FFCB6B;">                &quot;Insert vectors to Milvus in collection: {} with {} rows&quot;</span><span style="color:#FFCB6B;">.format(collection_name,</span><span style="color:#C3E88D;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">vectors</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#C3E88D;"> ids</span></span>
<span class="line"><span style="color:#FFCB6B;">        except</span><span style="color:#C3E88D;"> Exception</span><span style="color:#C3E88D;"> as</span><span style="color:#C3E88D;"> e:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.error(</span><span style="color:#FFCB6B;">&quot;Failed to load data to Milvus: {}&quot;</span><span style="color:#FFCB6B;">.format(e</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            sys.exit(1</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Create IVF_FLAT index on milvus collection</span></span>
<span class="line"><span style="color:#FFCB6B;">    def</span><span style="color:#C3E88D;"> create_index</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">self,</span><span style="color:#C3E88D;"> collection_name</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">        try:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;create_index&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            self.set_collection(collection_name</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            default_index</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index_type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">IVF_SQ8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">metric_type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#C3E88D;"> METRIC_TYPE,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">params</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#C3E88D;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nlist</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;"> 16384</span><span style="color:#C3E88D;">}}</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;default_index {}&quot;</span><span style="color:#FFCB6B;">.format(default_index</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            status</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> self.collection.create_index</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">field_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">embedding</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> index_params</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">default_index</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.info(</span><span style="color:#FFCB6B;">&quot;zhangling: ==================&gt;create_index {}&quot;</span><span style="color:#FFCB6B;">.format(status</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            if</span><span style="color:#FFCB6B;"> not</span><span style="color:#C3E88D;"> status.code:</span></span>
<span class="line"><span style="color:#FFCB6B;">                LOGGER.debug(</span></span>
<span class="line"><span style="color:#FFCB6B;">                    &quot;Successfully create index in collection:{} with param:{}&quot;</span><span style="color:#FFCB6B;">.format(collection_name,</span><span style="color:#C3E88D;"> default_index</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                return</span><span style="color:#C3E88D;"> status</span></span>
<span class="line"><span style="color:#BABED8;">            else:</span></span>
<span class="line"><span style="color:#FFCB6B;">                raise</span><span style="color:#C3E88D;"> Exception</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">status.message</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">        except</span><span style="color:#C3E88D;"> Exception</span><span style="color:#C3E88D;"> as</span><span style="color:#C3E88D;"> e:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.error(</span><span style="color:#FFCB6B;">&quot;Failed to create index: {}&quot;</span><span style="color:#FFCB6B;">.format(e</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            sys.exit(1</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Delete Milvus collection</span></span>
<span class="line"><span style="color:#FFCB6B;">    def</span><span style="color:#C3E88D;"> delete_collection</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">self,</span><span style="color:#C3E88D;"> collection_name</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">        try:</span></span>
<span class="line"><span style="color:#FFCB6B;">            self.set_collection(collection_name</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#82AAFF;">            self.collection.drop</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.debug(</span><span style="color:#FFCB6B;">&quot;Successfully drop collection!&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">        except</span><span style="color:#C3E88D;"> Exception</span><span style="color:#C3E88D;"> as</span><span style="color:#C3E88D;"> e:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.error(</span><span style="color:#FFCB6B;">&quot;Failed to drop collection: {}&quot;</span><span style="color:#FFCB6B;">.format(e</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            sys.exit(1</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Search vector in milvus collection</span></span>
<span class="line"><span style="color:#FFCB6B;">    def</span><span style="color:#C3E88D;"> search_vectors</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">self,</span><span style="color:#C3E88D;"> collection_name,</span><span style="color:#C3E88D;"> vectors,</span><span style="color:#C3E88D;"> top_k</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">        try:</span></span>
<span class="line"><span style="color:#FFCB6B;">            self.set_collection(collection_name</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            search_params</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">metric_type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#C3E88D;"> METRIC_TYPE,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">params</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#C3E88D;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nprobe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;"> 16</span><span style="color:#C3E88D;">}}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            # data = [vectors]</span></span>
<span class="line"><span style="color:#FFCB6B;">            res</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> self.collection.search</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">vectors,</span><span style="color:#C3E88D;"> anns_field=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">embedding</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#C3E88D;"> param=search_params,</span><span style="color:#C3E88D;"> limit=top_k</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">            print</span><span style="color:#BABED8;">(</span><span style="color:#C3E88D;">res[0]</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.debug(</span><span style="color:#FFCB6B;">&quot;Successfully search in collection: {}&quot;</span><span style="color:#FFCB6B;">.format(res</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#C3E88D;"> res</span></span>
<span class="line"><span style="color:#FFCB6B;">        except</span><span style="color:#C3E88D;"> Exception</span><span style="color:#C3E88D;"> as</span><span style="color:#C3E88D;"> e:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.error(</span><span style="color:#FFCB6B;">&quot;Failed to search vectors in Milvus: {}&quot;</span><span style="color:#FFCB6B;">.format(e</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            sys.exit(1</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    # Get the number of milvus collection</span></span>
<span class="line"><span style="color:#FFCB6B;">    def</span><span style="color:#C3E88D;"> count</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">self,</span><span style="color:#C3E88D;"> collection_name</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">        try:</span></span>
<span class="line"><span style="color:#FFCB6B;">            self.set_collection(collection_name</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            num</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> self.collection.num_entities</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.debug(</span><span style="color:#FFCB6B;">&quot;Successfully get the num:{} of the collection:{}&quot;</span><span style="color:#FFCB6B;">.format(num,</span><span style="color:#C3E88D;"> collection_name</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#C3E88D;"> num</span></span>
<span class="line"><span style="color:#FFCB6B;">        except</span><span style="color:#C3E88D;"> Exception</span><span style="color:#C3E88D;"> as</span><span style="color:#C3E88D;"> e:</span></span>
<span class="line"><span style="color:#FFCB6B;">            LOGGER.error(</span><span style="color:#FFCB6B;">&quot;Failed to count vectors in Milvus: {}&quot;</span><span style="color:#FFCB6B;">.format(e</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            sys.exit(1</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br></div></div><p>修改/app/src/config.py</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">import</span><span style="color:#C3E88D;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">############### Milvus Configuration ###############</span></span>
<span class="line"><span style="color:#FFCB6B;">MILVUS_HOST</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;MILVUS_HOST&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">192.168.1.85</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">MILVUS_PORT</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;MILVUS_PORT&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#F78C6C;"> 19533</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">VECTOR_DIMENSION</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;VECTOR_DIMENSION&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#F78C6C;"> 2048</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">INDEX_FILE_SIZE</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;INDEX_FILE_SIZE&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#F78C6C;"> 1024</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">METRIC_TYPE</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;METRIC_TYPE&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">L2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">DEFAULT_TABLE</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;DEFAULT_TABLE&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">milvus_img_search</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">TOP_K</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;TOP_K&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#F78C6C;"> 10</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">############### MySQL Configuration ###############</span></span>
<span class="line"><span style="color:#FFCB6B;">MYSQL_HOST</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;MYSQL_HOST&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">127.0.0.1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">MYSQL_PORT</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;MYSQL_PORT&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#F78C6C;"> 3306</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">MYSQL_USER</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;MYSQL_USER&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">MYSQL_PWD</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;MYSQL_PWD&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">mysqlmysql</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> \`</span><span style="color:#FFCB6B;">修改点</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#FFCB6B;">MYSQL_DB</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;MYSQL_DB&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">milvus_test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> \`</span><span style="color:#FFCB6B;">修改点</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">############### Data Path ###############</span></span>
<span class="line"><span style="color:#FFCB6B;">UPLOAD_PATH</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;UPLOAD_PATH&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">tmp/search-images</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">############### Number of log files ###############</span></span>
<span class="line"><span style="color:#FFCB6B;">LOGS_NUM</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> os.getenv</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;logs_num&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>修改/app/src/operations/load.py</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">import</span><span style="color:#C3E88D;"> sys</span></span>
<span class="line"><span style="color:#FFCB6B;">import</span><span style="color:#C3E88D;"> os</span></span>
<span class="line"><span style="color:#FFCB6B;">from</span><span style="color:#C3E88D;"> diskcache</span><span style="color:#C3E88D;"> import</span><span style="color:#C3E88D;"> Cache</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sys.path.append(</span><span style="color:#FFCB6B;">&quot;..&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">from</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> import</span><span style="color:#C3E88D;"> DEFAULT_TABLE</span></span>
<span class="line"><span style="color:#FFCB6B;">from</span><span style="color:#C3E88D;"> logs</span><span style="color:#C3E88D;"> import</span><span style="color:#C3E88D;"> LOGGER</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Get the path to the image</span></span>
<span class="line"><span style="color:#FFCB6B;">def</span><span style="color:#C3E88D;"> get_imgs</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">    pics</span><span style="color:#C3E88D;"> =</span><span style="color:#BABED8;"> []</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#BABED8;"> f </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#C3E88D;"> os.listdir</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#89DDFF;"> ((</span><span style="color:#BABED8;">f.endswith(extension) for extension in</span></span>
<span class="line"><span style="color:#BABED8;">             [&#39;.png&#39;, &#39;.jpg&#39;, &#39;.jpeg&#39;, &#39;.PNG&#39;, &#39;.JPG&#39;, &#39;.JPEG&#39;]) and not f.startswith(&#39;.DS_Store&#39;)):</span></span>
<span class="line"><span style="color:#FFCB6B;">            pics.append(os.path.join(path,</span><span style="color:#C3E88D;"> f</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#C3E88D;"> pics</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Get the vector of images</span></span>
<span class="line"><span style="color:#FFCB6B;">def</span><span style="color:#C3E88D;"> extract_features</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">img_dir,</span><span style="color:#C3E88D;"> model</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">    try:</span></span>
<span class="line"><span style="color:#FFCB6B;">        cache</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> Cache</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&#39;./tmp&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">        feats</span><span style="color:#C3E88D;"> =</span><span style="color:#BABED8;"> []</span></span>
<span class="line"><span style="color:#FFCB6B;">        names</span><span style="color:#C3E88D;"> =</span><span style="color:#BABED8;"> []</span></span>
<span class="line"><span style="color:#FFCB6B;">        img_list</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> get_imgs</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">img_dir</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">        total</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">img_list</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">        cache[</span><span style="color:#FFCB6B;">&#39;total&#39;</span><span style="color:#FFCB6B;">]</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> total</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#BABED8;"> i, img_path in enumerate</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">img_list</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">            norm_feat</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> model.resnet50_extract_feat</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">img_path</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            feats.append(norm_feat</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">            names.append(img_path.encode(</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">            cache[</span><span style="color:#FFCB6B;">&#39;current&#39;</span><span style="color:#FFCB6B;">]</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> i</span><span style="color:#C3E88D;"> +</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#82AAFF;">            print</span><span style="color:#BABED8;">(</span><span style="color:#FFCB6B;">&quot;Extracting feature from image No. %d , %d images in total&quot;</span><span style="color:#C3E88D;"> %</span><span style="color:#BABED8;"> (i </span><span style="color:#C3E88D;">+</span><span style="color:#C3E88D;"> 1,</span><span style="color:#C3E88D;"> total</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#C3E88D;"> feats,</span><span style="color:#C3E88D;"> names</span></span>
<span class="line"><span style="color:#FFCB6B;">    except</span><span style="color:#C3E88D;"> Exception</span><span style="color:#C3E88D;"> as</span><span style="color:#C3E88D;"> e:</span></span>
<span class="line"><span style="color:#FFCB6B;">        LOGGER.error(</span><span style="color:#FFCB6B;">&quot; Error with extracting feature from image {}&quot;</span><span style="color:#FFCB6B;">.format(e</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#FFCB6B;">        sys.exit(1</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Combine the id of the vector and the name of the image into a list</span></span>
<span class="line"><span style="color:#FFCB6B;">def</span><span style="color:#C3E88D;"> format_data</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ids,</span><span style="color:#C3E88D;"> names</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#FFCB6B;">    data</span><span style="color:#C3E88D;"> =</span><span style="color:#BABED8;"> []</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#C3E88D;"> range</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">len(ids</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;">):</span></span>
<span class="line"><span style="color:#FFCB6B;">        value</span><span style="color:#C3E88D;"> =</span><span style="color:#BABED8;"> (str(ids[i]), names</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;">]</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">        data.append(value</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#C3E88D;"> data</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Import vectors to Milvus and data to Mysql respectively</span></span>
<span class="line"><span style="color:#FFCB6B;">def</span><span style="color:#C3E88D;"> do_load</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">table_name,</span><span style="color:#C3E88D;"> image_dir,</span><span style="color:#C3E88D;"> model,</span><span style="color:#C3E88D;"> milvus_client,</span><span style="color:#C3E88D;"> mysql_cli</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#FFCB6B;"> not</span><span style="color:#C3E88D;"> table_name:</span></span>
<span class="line"><span style="color:#FFCB6B;">        table_name</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> DEFAULT_TABLE</span></span>
<span class="line"><span style="color:#FFCB6B;">    vectors,</span><span style="color:#C3E88D;"> names</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> extract_features</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">image_dir,</span><span style="color:#C3E88D;"> model</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">    ids</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> milvus_client.insert</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">table_name,</span><span style="color:#C3E88D;"> vectors</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">    milvus_client.create_index(table_name</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">修改点-注解掉</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#FFCB6B;">    mysql_cli.create_mysql_table(table_name</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">    mysql_cli.load_data_to_mysql(table_name,</span><span style="color:#C3E88D;"> format_data</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ids,</span><span style="color:#C3E88D;"> names</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#C3E88D;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ids</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><h3 id="安装milvusbootcamp-img-search-client-1-0" tabindex="-1">安装milvusbootcamp/img-search-client:1.0 <a class="header-anchor" href="#安装milvusbootcamp-img-search-client-1-0" aria-label="Permalink to &quot;安装milvusbootcamp/img-search-client:1.0&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">run</span><span style="color:#C3E88D;"> -d</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> 8001:80</span><span style="color:#C3E88D;"> -e</span><span style="color:#C3E88D;"> API_URL=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://172.26.27.23:5000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> milvusbootcamp/img-search-client:1.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+y+'" alt="An image"></p>',81),B=[D];function u(C,m,b,E,d,h){return a(),n("div",null,B)}const f=s(F,[["render",u]]);export{v as __pageData,f as default};
