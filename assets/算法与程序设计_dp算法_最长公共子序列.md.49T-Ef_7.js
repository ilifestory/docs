import{_ as s,c as n,o as a,a4 as l,eP as p,eQ as e,eR as o}from"./chunks/framework.CCJHkvW2.js";const E=JSON.parse('{"title":"最长公共子序列","description":"","frontmatter":{},"headers":[],"relativePath":"算法与程序设计/dp算法/最长公共子序列.md","filePath":"算法与程序设计/dp算法/最长公共子序列.md","lastUpdated":1708482714000}'),r={name:"算法与程序设计/dp算法/最长公共子序列.md"},c=l(`<h1 id="最长公共子序列" tabindex="-1">最长公共子序列 <a class="header-anchor" href="#最长公共子序列" aria-label="Permalink to &quot;最长公共子序列&quot;">​</a></h1><h2 id="_2个子序列分别为-xm-x1-x2-x3-xm-yn-y1-y2-y3-yn-找出x-y最长公共子序列" tabindex="-1">2个子序列分别为 Xₘ = {x₁,x₂,x₃,...,xₘ} , Yₙ = {y₁,y₂,y₃,...,yₙ},找出X,Y最长公共子序列 <a class="header-anchor" href="#_2个子序列分别为-xm-x1-x2-x3-xm-yn-y1-y2-y3-yn-找出x-y最长公共子序列" aria-label="Permalink to &quot;2个子序列分别为 Xₘ = {x₁,x₂,x₃,...,xₘ} , Yₙ = {y₁,y₂,y₃,...,yₙ},找出X,Y最长公共子序列&quot;">​</a></h2><p>假设 Zₖ 是最长公共子序列及为 Zₖ = <code>{z₁,z₂,z₃,...,zₖ}</code></p><h3 id="_1-若-xm-yn" tabindex="-1">⑴ 若 xₘ = yₙ <a class="header-anchor" href="#_1-若-xm-yn" aria-label="Permalink to &quot;⑴ 若 xₘ = yₙ&quot;">​</a></h3><pre><code>① 假设 xₘ = yₙ = zₖ, 则 Zₖ₋₁ 是 Xₘ₋₁ 和 Yₙ₋₁ 的最长公共子序列

② 假设 xₘ = yₙ ≠ zₖ, 则 Zₖ 是 Xₘ₋₁ 和 Yₙ₋₁ 的最长公共子序列
</code></pre><h3 id="_2-若-xm-yn" tabindex="-1">⑵ 若 xₘ ≠ yₙ <a class="header-anchor" href="#_2-若-xm-yn" aria-label="Permalink to &quot;⑵ 若 xₘ ≠ yₙ&quot;">​</a></h3><pre><code>① 假设 xₘ = zₖ, 则 Zₖ 是 Xₘ 和 Yₙ₋₁ 的最长公共子序列

② 假设 yₙ = zₖ, 则 Zₖ 是 Xₘ₋₁ 和 Yₙ 的最长公共子序列

③ 假设 xₘ ≠ zₖ 且 yₙ ≠ zₖ, 则 Zₖ 是 Xₘ₋₁ 和 Yₙ-1 的最长公共子序列
</code></pre><h2 id="状态方程" tabindex="-1">状态方程 <a class="header-anchor" href="#状态方程" aria-label="Permalink to &quot;状态方程&quot;">​</a></h2><p><img src="`+p+'" alt="An image"></p><h2 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h2><p><img src="'+e+`" alt="An image"></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">    static</span><span style="color:#C3E88D;"> String</span><span style="color:#C3E88D;"> x</span><span style="color:#C3E88D;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">abcdefgh</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">    static</span><span style="color:#C3E88D;"> String</span><span style="color:#C3E88D;"> y</span><span style="color:#C3E88D;"> =</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">bedfagc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">    //存放数值</span><span style="color:#C3E88D;">  及最长公共子序列的长度</span></span>
<span class="line"><span style="color:#FFCB6B;">    static</span><span style="color:#C3E88D;"> Integer[][]</span><span style="color:#C3E88D;"> result</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> new</span><span style="color:#C3E88D;"> Integer[x.length</span><span style="color:#89DDFF;">()</span><span style="color:#C3E88D;">+1][y.length</span><span style="color:#89DDFF;">()</span><span style="color:#C3E88D;">+1]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">    static</span><span style="color:#C3E88D;"> Set</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">Strin</span><span style="color:#BABED8;">g</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;"> lcss</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> new</span><span style="color:#C3E88D;"> HashSet</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">    public</span><span style="color:#C3E88D;"> static</span><span style="color:#C3E88D;"> void</span><span style="color:#C3E88D;"> maxLCS</span><span style="color:#89DDFF;">()</span><span style="color:#C3E88D;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#89DDFF;"> (</span><span style="color:#FFCB6B;">int</span><span style="color:#C3E88D;"> i</span><span style="color:#C3E88D;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">=</span><span style="color:#C3E88D;"> x.length</span><span style="color:#89DDFF;">();</span><span style="color:#FFCB6B;"> i++</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            for</span><span style="color:#89DDFF;"> (</span><span style="color:#FFCB6B;">int</span><span style="color:#C3E88D;"> j</span><span style="color:#C3E88D;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;"> j</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">=</span><span style="color:#C3E88D;"> y.length</span><span style="color:#89DDFF;">();</span><span style="color:#FFCB6B;"> j++</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                if</span><span style="color:#89DDFF;"> (</span><span style="color:#FFCB6B;">i</span><span style="color:#C3E88D;"> ==</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;"> ||</span><span style="color:#FFCB6B;"> j</span><span style="color:#C3E88D;"> ==</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#FFCB6B;">                    result[i][j]</span><span style="color:#C3E88D;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">                }</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#89DDFF;"> (</span><span style="color:#FFCB6B;">int</span><span style="color:#C3E88D;"> i</span><span style="color:#C3E88D;"> =</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">=</span><span style="color:#C3E88D;"> x.length</span><span style="color:#89DDFF;">();</span><span style="color:#FFCB6B;"> i++</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            for</span><span style="color:#89DDFF;"> (</span><span style="color:#FFCB6B;">int</span><span style="color:#C3E88D;"> j</span><span style="color:#C3E88D;"> =</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;"> j</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">=</span><span style="color:#C3E88D;"> y.length</span><span style="color:#89DDFF;">();</span><span style="color:#FFCB6B;"> j++</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#FFCB6B;">                if(x.charAt(i-1</span><span style="color:#BABED8;">) == y.charAt(</span><span style="color:#FFCB6B;">j-1</span><span style="color:#BABED8;">)){</span></span>
<span class="line"><span style="color:#FFCB6B;">                    result[i][j]</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> result[i-1][j-1]</span><span style="color:#C3E88D;"> +</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">                }</span><span style="color:#BABED8;"> else{</span></span>
<span class="line"><span style="color:#FFCB6B;">                    if(result[i-1][j]</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#C3E88D;">=</span><span style="color:#C3E88D;"> result[i][j-1]</span><span style="color:#BABED8;">){</span></span>
<span class="line"><span style="color:#FFCB6B;">                        result[i][j]</span><span style="color:#C3E88D;">=</span><span style="color:#C3E88D;"> result[i-1][j]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">                    }</span><span style="color:#BABED8;">else{</span></span>
<span class="line"><span style="color:#FFCB6B;">                        result[i][j]</span><span style="color:#C3E88D;">=</span><span style="color:#C3E88D;"> result[i][j-1]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">                    }</span></span>
<span class="line"><span style="color:#BABED8;">                }</span></span>
<span class="line"><span style="color:#BABED8;">            }</span></span>
<span class="line"><span style="color:#BABED8;">        }</span></span>
<span class="line"><span style="color:#FFCB6B;">        System.out.println(result[x.length(</span><span style="color:#BABED8;">)][y.length()]);</span></span>
<span class="line"><span style="color:#BABED8;">    }</span></span>
<span class="line"><span style="color:#FFCB6B;">    public</span><span style="color:#C3E88D;"> static</span><span style="color:#C3E88D;"> void</span><span style="color:#C3E88D;"> lcss2</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">int</span><span style="color:#C3E88D;"> h,int</span><span style="color:#C3E88D;"> v</span><span style="color:#C3E88D;"> ,String</span><span style="color:#C3E88D;"> lscStr</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> {</span></span>
<span class="line"><span style="color:#FFCB6B;">        while(h</span><span style="color:#BABED8;">&gt;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#FFCB6B;"> v</span><span style="color:#BABED8;">&gt;</span><span style="color:#C3E88D;">0</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#FFCB6B;">            if(x.charAt(h-1</span><span style="color:#BABED8;">) == y.charAt(</span><span style="color:#FFCB6B;">v-1</span><span style="color:#BABED8;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#FFCB6B;">                //最后2个字符一样</span></span>
<span class="line"><span style="color:#FFCB6B;">                h--</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">                v--</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">                lscStr</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> x.charAt</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">h</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> +</span><span style="color:#C3E88D;"> lscStr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#FFCB6B;">                if(result[h-1][v]</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#C3E88D;"> result[h][v-1]</span><span style="color:#BABED8;">){</span></span>
<span class="line"><span style="color:#FFCB6B;">                    h--</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">                }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#BABED8;"> if(</span><span style="color:#FFCB6B;">result[h-1][v]</span><span style="color:#BABED8;">&lt;result[h]</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">v-1</span><span style="color:#89DDFF;">]</span><span style="color:#BABED8;">){</span></span>
<span class="line"><span style="color:#FFCB6B;">                    v--</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">                }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#FFCB6B;">                    lcss(h-1,v,lscStr</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">                    lcss(h,v-1,lscStr</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">                    return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">                }</span></span>
<span class="line"><span style="color:#BABED8;">            }</span></span>
<span class="line"><span style="color:#BABED8;">        }</span></span>
<span class="line"><span style="color:#BABED8;">        if(</span><span style="color:#82AAFF;">lscStr.length</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#BABED8;"> 0)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#FFCB6B;">            lcss.add(lscStr</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        };</span></span>
<span class="line"><span style="color:#BABED8;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><p><img src="`+o+`" alt="An image"></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">    public</span><span style="color:#C3E88D;"> static</span><span style="color:#C3E88D;"> void</span><span style="color:#C3E88D;"> lcss</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">int</span><span style="color:#C3E88D;"> h,int</span><span style="color:#C3E88D;"> v</span><span style="color:#C3E88D;"> ,String</span><span style="color:#C3E88D;"> lscStr</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#89DDFF;"> (</span><span style="color:#FFCB6B;">h</span><span style="color:#C3E88D;"> ==</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;"> ||</span><span style="color:#FFCB6B;"> v</span><span style="color:#C3E88D;"> ==</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;">{</span></span>
<span class="line"><span style="color:#FFCB6B;">            if(lscStr.length(</span><span style="color:#BABED8;">) &gt; 0){</span></span>
<span class="line"><span style="color:#FFCB6B;">                lcss.add(lscStr</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">            }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">        }</span></span>
<span class="line"><span style="color:#BABED8;">        if(</span><span style="color:#FFCB6B;">x.charAt(h-1</span><span style="color:#BABED8;">) == y.charAt(</span><span style="color:#FFCB6B;">v-1</span><span style="color:#BABED8;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#FFCB6B;">            //最后2个字符一样</span></span>
<span class="line"><span style="color:#FFCB6B;">            lscStr</span><span style="color:#C3E88D;"> =</span><span style="color:#C3E88D;"> x.charAt</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">h-1</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> +</span><span style="color:#C3E88D;"> lscStr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">            lcss2(h-1,v-1,lscStr</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#FFCB6B;">            if(result[h-1][v]</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#C3E88D;"> result[h][v-1]</span><span style="color:#BABED8;">){</span></span>
<span class="line"><span style="color:#FFCB6B;">                lcss2(h-1,v,lscStr</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#BABED8;"> if(</span><span style="color:#FFCB6B;">result[h-1][v]</span><span style="color:#BABED8;">&lt;result[h]</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">v-1</span><span style="color:#89DDFF;">]</span><span style="color:#BABED8;">){</span></span>
<span class="line"><span style="color:#FFCB6B;">                lcss2(h,v-1,lscStr</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">            } </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#FFCB6B;">                //兵分2路</span></span>
<span class="line"><span style="color:#FFCB6B;">                lcss2(h,v-1,lscStr</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">                lcss2(h-1,v,lscStr</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span></span>
<span class="line"><span style="color:#BABED8;">        }</span></span>
<span class="line"><span style="color:#BABED8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">    public</span><span style="color:#C3E88D;"> static</span><span style="color:#C3E88D;"> void</span><span style="color:#C3E88D;"> main</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">String[]</span><span style="color:#C3E88D;"> args</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">        maxLCS</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#FFCB6B;">        lcss(x.length(</span><span style="color:#BABED8;">),y.length(),&quot;&quot;);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        for</span><span style="color:#89DDFF;"> (</span><span style="color:#FFCB6B;">String</span><span style="color:#C3E88D;"> lcs:lcss</span></span>
<span class="line"><span style="color:#89DDFF;">             )</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#FFCB6B;">            System.out.println(lcs</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#BABED8;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>`,14),t=[c];function y(F,D,i,B,b,C){return a(),n("div",null,t)}const m=s(r,[["render",y]]);export{E as __pageData,m as default};
