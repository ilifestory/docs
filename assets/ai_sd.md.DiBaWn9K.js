import{_ as p,c as a,o as e,a4 as r}from"./chunks/framework.CCJHkvW2.js";const M=JSON.parse('{"title":"Stable Diffusion","description":"","frontmatter":{},"headers":[],"relativePath":"ai/sd.md","filePath":"ai/sd.md","lastUpdated":1713833896000}'),t={name:"ai/sd.md"},s=r('<h1 id="stable-diffusion" tabindex="-1">Stable Diffusion <a class="header-anchor" href="#stable-diffusion" aria-label="Permalink to &quot;Stable Diffusion&quot;">​</a></h1><p>参考文献(<a href="https://blog.51cto.com/u_16689212/10373149" target="_blank" rel="noreferrer">https://blog.51cto.com/u_16689212/10373149</a>)(<a href="https://blog.csdn.net/lizhong2008/article/details/132278253" target="_blank" rel="noreferrer">https://blog.csdn.net/lizhong2008/article/details/132278253</a>)</p><h2 id="采样方法" tabindex="-1">采样方法 <a class="header-anchor" href="#采样方法" aria-label="Permalink to &quot;采样方法&quot;">​</a></h2><p>什么是采样方法 ？</p><p>采样方法的分类有哪些？</p><p>怎么选择合适的采样方法？</p><p>在 Stable Diffusion中目前已经有很多采样方法 ，不同的采样方法，出图效果不同。这里将详细介绍这些采样方法，以及在使用 Stable Diffusion 的过程中，怎么选择合适的采样方法。</p><p>一、什么是采样方法 ？</p><p>我们知道 sd webui 生成图像，大致会经过以下过程：</p><p>1、为了生成图像， Stable Diffusion 会在潜在空间中生成一个完全随机的图像</p><p>2、噪声预测器会估算图像的噪声</p><p>3、噪声预测器从图像中减去预测的噪声</p><p>4、这个过程反复重复 N 次以后，会得到一个干净准确的图像</p><p>这个去噪的过程，就被称为采样。</p><p>采样中使用的方法被称为 Sampling method （采样方法或者是采样器）。</p><p>采样步骤 Sampling steps 有什么影响？</p><p>采样步骤，那么每个步骤降噪就越小 ，这样可以减少采样过程中的截断误差。</p><p>二、采样方法的分类</p><p>为了便于使用和理解，我们可以将这些采样方法进行分类：</p><p>（1）经典ODE求解器</p><p>包含：Euler \\Heun \\LMS。</p><p>Euler采样器：欧拉采样方法。 Heun采样器：欧拉的一个更准确但是较慢的版本。 LMS采样器：线性多步法，与欧拉采样器速度相仿，但是更准确。</p><p>（2）祖先采样器 （名称中有一个字母 a 的）</p><p>包含 :Euler a \\ DPM2 a \\DPM++2S a \\DPM2 a Karras \\DPM++2S a Karras</p><p>这些采样器会在每个采样步骤中，向图像添加噪声，因此具有一定的随机性。</p><p>注意：部分采样器的名字中虽然没有明确标识属于祖先采样器，但也属于随机采样器。</p><p>（3）DDIM、PLMS（已过时，不再使用）</p><p>DDIM ：去噪扩散隐式模型， 是为扩散模型设计的第一个采样器。 PLMS：伪线性多步方法， 则是DDIM 更快速的替代品 。 当前这两种采样方法都不再广泛使用。</p><p>（4）DPM 和 DPM++ 系列</p><p>DPM 和 DPM++ 体系结构的求解器系列， 是2022年发布的用于扩散模型的新采样器 ，它们具有相似的结构。</p><p>DPM的缺点：由于DPM会自适应调整步长，不能保证在约定的采样步骤内完成任务，整体速度可能会比较慢。</p><p>DPM的优点：对Tag的利用率较高，在使用时建议适当放大采样的步骤数以获得较好的效果。</p><p>DPM++ 是对DPM 的改进，采用二阶方法，其结果更准确，但是相应的也会更慢一些。</p><p>（5）UniPC采样器</p><p>这UniPC采样器是2023年发布的新采样器，根据 ode 求解器中预测校正方法的启发，可在5-10步内实现高质量图像生成。</p><p>（6）K-diffusion 采样器</p><p>当前常用的采样器中，除了DDIM、PLMS与UniPC之外的采样器均来自于k-diffusion， 通常这些采样器都带有 Karras 字样。</p><p>了解了以上采样器的分类，相信大家对选择采样器，已经可以缩小选择的范围了。</p><p>三、采样器方法详解</p><p>接下来我们根据 Stable Diffusion WebUI 中采样器的顺序，对每个采样器进行详细介绍。</p><p>1、Euler a</p><p>祖先采样器的一种 ， 类似于 Euler ，但在每个步骤中它会减去比“应该”更多的噪声。并添加一些随机噪声以匹配噪声计划。去噪图像取决于前面步骤中添加的特定噪声。</p><p>2、Euler</p><p>最简单的采样器，在采样过程中不添加随机噪声，通过噪声计划告诉采样器，每个步骤中应该有多少噪声。并使用欧拉方法减少恰当数量的噪声。以匹配噪声计划，直到最后一步为0 为止。</p><p>3、LMS 解决常微分方程的标准方法</p><p>LMS采样速度与Euler 相同 。</p><p>4、Heum</p><p>Heum 是对Euler 更精确的改进，但是需要在每个步骤中预测两次噪声。</p><p>因此速度比Euler 慢2倍。</p><p>5、DPM2</p><p>dpm2 是Katherine Crowson在K-diffusion项目中自创的 ，灵感来源Karras论文中的DPM-Solver-2和算法2 ，受采样器设置页面中的 sigma参数影响。</p><p>6、DPM2 a</p><p>祖先采样器的一种，使用 DPM2 方法 ，受采样器设置中的ETA参数影响 。</p><p>7、DPM++2S a</p><p>随机采样器一种</p><p>在K-diffusion实现的2阶单步并受采样器设置中的ETA参数影响。</p><p>8、 DPM++2M</p><p>在Kdiffusion实现的2阶多步采样方法，在Hagging face Diffusers中被称作已知最强调度器。在速度和质量的平衡最好。这个代表m的多步比上面的s单步，在采样时会参考更多步，而非当前步，所以能提供更好的质量，但是也更复杂。</p><p>9、 DPM++SDE</p><p>DPM++的SDE版本，DPM++ 原本是0DE 求解器及常微分方程在Ktifusion实现的版本，代码中调用了随机采样方法，所以受采样器设置中的ETA参数影响。</p><p>10、 DPM fast</p><p>在Ktifusion实现的固定步长采样方法 ，用于steps小于20的情况。受采样器设置中的ETA参数影响。</p><p>11、 DPM adaptive</p><p>在K-diffusion 实现的自适应步长采样方法，DPM-Solver-12 和23，受采样器设置中的ETA参数影响。</p><p>12、带有Karras字样的6种采样器</p><p>LMS karras 、DPM2 karras 、DPM2 a karras 、DPM++ 2S a karras 、DPM++2M karras、DPM++ SDE karras 、DPM++2M SDE karras</p><p>这些含有Karras名字的采样方法 都是相当于 Karras噪声时间表的版本。</p><p>13 、DDIM</p><p>官方采样器之一，使用去噪后的图像来近似最终图像，并使用噪声预测器估计的噪声，来近似图像方向。</p><p>14、PLMS</p><p>官方采样器之一，PLMS则是DDIM的新版且更快速的替代品。</p><p>15、unipc</p><p>最新添加的采样器，应该是目前最快最新的采样方法，10步内实现高质量图像。</p><p>四、怎么选择合适的采样方法？</p><p>以下是我的建议：</p><p>如果想快速生成质量不错的图片，建议选择 DPM++ 2M Karras (20 -30步) 、UNIPC （15-25步） 如果想要高质量的图，不关心重现性，建议选择 DPM++ SDE Karras （10-15步 较慢) ，DDIM(10-15步 较快) 如果想要简单的图，建议选择 Euler, Heun(可以减少步骤以节省时间) 如果想要稳定可重现的图像，请避免选择任何祖先采样器（名字里面带a或SDE） 相反，如果想要每次生成不一样的图像，可以选择不收敛的祖先采样器（名字里面带a或SDE）</p><h2 id="采样器参数" tabindex="-1">采样器参数 <a class="header-anchor" href="#采样器参数" aria-label="Permalink to &quot;采样器参数&quot;">​</a></h2><p>ksampler采样器节点负责在潜空间生成图片。与Web界面中的生成参数基本相同。</p><p>a. 随机种子：每张图都有一个随机的编号。 随机种子值控制潜空间图像的初始噪声，从而控制最终图像的合成。不同的 seed 值会生成不同的图像，因此可以通过调整 seed 值来尝试生成不同的效果。</p><p>b. 运行后操作：种子可以是固定、增加（在原来的种子值上+1）、减少、随机。通常我们使用固定和随机。</p><p>c. 步数：设置我们生成这张图需要去除噪音的次数。 采样步长越大，图像的细节越丰富，但也越容易出现噪点。</p><p>d. CFG：提示词引导系数，值越大，生成的图像越符合提示词。通常在8左右就足够了。</p><p>e. 采样器：有多个选项可供选择。我们需要在使用Web UI时进行选择。我会在后面的时间里逐一介绍它们的区别。通常我会选择euler_ancestral（Web UI中的Eulera）、dpmpp_2m（DPM++ 2m）、dpmpp_2m_sde_gpu。</p><p>f. 调度器：每一次迭代步数中控制噪声量大小的因素。一般我们选择normal或karras。</p><p>g. 降噪：与步数有关，1表示我们完全按照上方输入的步数进行处理，0.1表示10%。在这里我们填写1。</p><h2 id="局部重绘" tabindex="-1">局部重绘 <a class="header-anchor" href="#局部重绘" aria-label="Permalink to &quot;局部重绘&quot;">​</a></h2><p>参考文献(<a href="https://blog.csdn.net/weixin_66363548/article/details/134151894" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_66363548/article/details/134151894</a>)(<a href="https://huke88.com/article/8091.html" target="_blank" rel="noreferrer">https://huke88.com/article/8091.html</a>)(<a href="https://zhuanlan.zhihu.com/p/667284558" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/667284558</a>)</p><p>首先介绍一下局部重绘中的功能和使用：</p><p>1、缩放方式：若原图与设置尺寸不一致时，选择拉伸、裁切、填充会有不同的效果。</p><p>2、蒙版模糊：重绘蒙版内容就是重新画被涂掉的部分、重绘非蒙版内容就是重新画没有涂掉的部分</p><p>3、蒙版蒙住的内容：这4个选项差异不大，但是不同原图有不同效果，生成图片时需要自行尝试。</p><p>4、重绘区域：仅画蒙版（涂黑的区域）或是整个图片；（这里根据不同的重绘内容尝试选择）</p><p>5、仅蒙版模式的边缘预留像素：蒙版边缘与原图交接处的像素，可以让新生成的内容与原图更好的融合在一起（一般25-35就行）</p><p>其他设置基于与文生图内操作一致，选择采样方式、迭代步数等，这里建议在使用局部重绘时，要选择与原图一致的设置，从而可以确保重绘效果。</p>',94),i=[s];function n(l,o,D,f,u,d){return e(),a("div",null,i)}const P=p(t,[["render",n]]);export{M as __pageData,P as default};
