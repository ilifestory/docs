import{_ as s,c as a,o as n,a4 as e,e0 as r,e1 as o,e2 as l,e3 as p,e4 as t,e5 as c,e6 as i}from"./chunks/framework.CCJHkvW2.js";const v=JSON.parse('{"title":"docker 安装sonar","description":"","frontmatter":{},"headers":[],"relativePath":"tool/sonsarqube.md","filePath":"tool/sonsarqube.md","lastUpdated":1708482714000}'),d={name:"tool/sonsarqube.md"},b=e(`<h1 id="docker-安装sonar" tabindex="-1">docker 安装sonar <a class="header-anchor" href="#docker-安装sonar" aria-label="Permalink to &quot;docker 安装sonar&quot;">​</a></h1><p>参考文献 <a href="https://www.cnblogs.com/wuxinchun/p/16796829.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/wuxinchun/p/16796829.html</a></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span>docker pull postgres</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span>docker run --name postgres -d -p 5432:5432 -v /docker/postgres/postgresql:/var/lib/postgresql -v /docker/postgres/data:/var/lib/postgresql/data -v /etc/localtime:/etc/localtime:ro</span></span>
<span class="line"><span>-e POSTGRES_USER=sonar -e POSTGRES_PASSWORD=sonar -e POSTGRES_DB=sonar -e TZ=Asia/Shanghai --restart always --privileged=true  postgres:latest</span></span>
<span class="line"><span>docker run -d --name sonarqube -p 9010:9000 -e ALLOW_EMPTY_PASSWORD=yes -e SONARQUBE_DATABASE_USER=sonar -e SONARQUBE_DATABASE_NAME=sonar</span></span>
<span class="line"><span>-e SONARQUBE_DATABASE_PASSWORD=sonar -e SONARQUBE_JDBC_URL=&quot;jdbc:postgresql://172.26.25.23:5432/sonar&quot; --privileged=true --restart always</span></span>
<span class="line"><span>-v /docker/sonarqube/logs:/opt/sonarqube/logs -v /docker/sonarqube/conf:/opt/sonarqube/conf -v /docker/sonarqube/data:/opt/sonarqube/data -v /docker/sonarqube/extensions:/opt/sonarqube/extensions sonarqube</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span>mvn clean verify sonar:sonar -Dsonar.projectKey=template -Dsonar.projectName=&#39;template&#39; -Dsonar.host.url=http://172.26.25.23:9010 -Dsonar.token=sqp_6259a9d79daa39994925f5abe4089d3e3dac21d2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>参考文献(<a href="https://www.cnblogs.com/wuxinchun/p/16796829.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/wuxinchun/p/16796829.html</a>)</p><p>docker pull postgres</p><p>docker run --name postgres -d -p 5432:5432 -v /docker/postgres/postgresql:/var/lib/postgresql -v /docker/postgres/data:/var/lib/postgresql/data -v /etc/localtime:/etc/localtime:ro -e POSTGRES_USER=sonar -e POSTGRES_PASSWORD=sonar -e POSTGRES_DB=sonar -e TZ=Asia/Shanghai --restart always --privileged=true postgres:latest</p><p>docker run -d --name sonarqube -p 9010:9000 -e ALLOW_EMPTY_PASSWORD=yes -e SONARQUBE_DATABASE_USER=sonar -e SONARQUBE_DATABASE_NAME=sonar -e SONARQUBE_DATABASE_PASSWORD=sonar -e SONARQUBE_JDBC_URL=&quot;jdbc:postgresql://172.26.25.23:5432/sonar&quot; --privileged=true --restart always -v /docker/sonarqube/logs:/opt/sonarqube/logs -v /docker/sonarqube/conf:/opt/sonarqube/conf -v /docker/sonarqube/data:/opt/sonarqube/data -v /docker/sonarqube/extensions:/opt/sonarqube/extensions sonarqube</p><p>mvn clean verify sonar:sonar -Dsonar.projectKey=template -Dsonar.projectName=&#39;template&#39; -Dsonar.host.url=<a href="http://172.26.25.23:9010" target="_blank" rel="noreferrer">http://172.26.25.23:9010</a> -Dsonar.token=sqp_6259a9d79daa39994925f5abe4089d3e3dac21d2</p><h2 id="与jenkins集成" tabindex="-1">与jenkins集成 <a class="header-anchor" href="#与jenkins集成" aria-label="Permalink to &quot;与jenkins集成&quot;">​</a></h2><p><a href="https://www.cnblogs.com/scfssq/p/17449279.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/scfssq/p/17449279.html</a></p><h2 id="下载插件-sonarqube-scanner" tabindex="-1">1️⃣下载插件 SonarQube Scanner <a class="header-anchor" href="#下载插件-sonarqube-scanner" aria-label="Permalink to &quot;:one:下载插件 SonarQube Scanner&quot;">​</a></h2><p><img src="`+r+'" alt="An image"></p><h2 id="修改全局配置" tabindex="-1">2️⃣修改全局配置 <a class="header-anchor" href="#修改全局配置" aria-label="Permalink to &quot;:two:修改全局配置&quot;">​</a></h2><p><img src="'+o+'" alt="An image"></p><h2 id="添加jenkins-的凭据" tabindex="-1">3️⃣添加Jenkins 的凭据 <a class="header-anchor" href="#添加jenkins-的凭据" aria-label="Permalink to &quot;:three:添加Jenkins 的凭据&quot;">​</a></h2><p><img src="'+l+'" alt="An image"></p><h2 id="在-sonarqube-中生成一个用户-token" tabindex="-1">4️⃣在 SonarQube 中生成一个用户 token <a class="header-anchor" href="#在-sonarqube-中生成一个用户-token" aria-label="Permalink to &quot;:four:在 SonarQube 中生成一个用户 token&quot;">​</a></h2><p><img src="'+p+'" alt="An image"><img src="'+t+'" alt="An image"></p><h2 id="修改系统配置" tabindex="-1">5️⃣修改系统配置 <a class="header-anchor" href="#修改系统配置" aria-label="Permalink to &quot;:five:修改系统配置&quot;">​</a></h2><p><img src="'+c+'" alt="An image"></p><h2 id="修改系统配置-1" tabindex="-1">6️⃣修改系统配置 <a class="header-anchor" href="#修改系统配置-1" aria-label="Permalink to &quot;:six:修改系统配置&quot;">​</a></h2><p><img src="'+i+`" alt="An image"></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#sonar平台中相对应项目的key</span></span>
<span class="line"><span style="color:#FFCB6B;">sonar.projectKey</span><span style="color:#C3E88D;">=bridge</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#sonar平台中相对应项目的名字</span></span>
<span class="line"><span style="color:#FFCB6B;">sonar.projectName</span><span style="color:#C3E88D;">=桥梁项目</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sonar.projectVersion</span><span style="color:#C3E88D;">=1.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#sonar检测的源文件目录，‘.’表示当前根目录下的所有文件目录;包含主要源文件的目录的逗号分隔路径</span></span>
<span class="line"><span style="color:#FFCB6B;">sonar.sources</span><span style="color:#C3E88D;">=./</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">module</span><span style="color:#89DDFF;">}</span><span style="color:#FFCB6B;">/src</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#检测中排除的源文件（排除的源文件不参与检测，一般排除单元测试文件、配置文件等）</span></span>
<span class="line"><span style="color:#FFCB6B;">sonar.exclusions</span><span style="color:#C3E88D;">=**/*_test.go,**/vendor/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#编译打包生成包的目录</span></span>
<span class="line"><span style="color:#FFCB6B;">sonar.java.binaries</span><span style="color:#C3E88D;">=./</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">module</span><span style="color:#89DDFF;">}</span><span style="color:#FFCB6B;">/target/classes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sonar.language</span><span style="color:#C3E88D;">=java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sonar.sourceEncoding</span><span style="color:#C3E88D;">=UTF-8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,25),u=[b];function m(h,g,_,q,k,S){return n(),a("div",null,u)}const A=s(d,[["render",m]]);export{v as __pageData,A as default};
