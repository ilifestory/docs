import{_ as a,c as s,o as n,a4 as e,dB as p,dC as i,dD as r,dE as l,dF as t,dG as o,dH as c,dI as d,dJ as m,dK as h,dL as b,dM as u,dN as _}from"./chunks/framework.CCJHkvW2.js";const f=JSON.parse('{"title":"docker安装jenkins","description":"","frontmatter":{},"headers":[],"relativePath":"tool/docker安装jenkins.md","filePath":"tool/docker安装jenkins.md","lastUpdated":1708482714000}'),k={name:"tool/docker安装jenkins.md"},g=e(`<h1 id="docker安装jenkins" tabindex="-1">docker安装jenkins <a class="header-anchor" href="#docker安装jenkins" aria-label="Permalink to &quot;docker安装jenkins&quot;">​</a></h1><pre><code>docker run -d -p 8080:8080 --name jenkins -u root --restart=always -v /etc/localtime:/etc/localtime -v /usr/bin/docker:/usr/bin/docker -v /var/run/docker.sock:/var/run/docker.sock -v /root/jenkins:/var/jenkins_home jenkins/jenkins:2.411
</code></pre><h2 id="安装插件" tabindex="-1">安装插件 <a class="header-anchor" href="#安装插件" aria-label="Permalink to &quot;安装插件&quot;">​</a></h2><p>Maven Integration</p><p>Publish Over SSH</p><p>NodeJS Plugin</p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h2 id="点击-全局工具配置" tabindex="-1">点击-全局工具配置 <a class="header-anchor" href="#点击-全局工具配置" aria-label="Permalink to &quot;点击-全局工具配置&quot;">​</a></h2><p><img src="`+p+'" alt="An image"></p><h2 id="安装maven" tabindex="-1">安装Maven <a class="header-anchor" href="#安装maven" aria-label="Permalink to &quot;安装Maven&quot;">​</a></h2><p><img src="'+i+'" alt="An image"></p><h2 id="点击-系统配置" tabindex="-1">点击-系统配置 <a class="header-anchor" href="#点击-系统配置" aria-label="Permalink to &quot;点击-系统配置&quot;">​</a></h2><p><img src="'+r+'" alt="An image"></p><h2 id="添加服务器账号密码" tabindex="-1">添加服务器账号密码 <a class="header-anchor" href="#添加服务器账号密码" aria-label="Permalink to &quot;添加服务器账号密码&quot;">​</a></h2><p>点击新增</p><p><img src="'+l+'" alt="An image"></p><p><img src="'+t+'" alt="An image"></p><h2 id="配置git" tabindex="-1">配置git <a class="header-anchor" href="#配置git" aria-label="Permalink to &quot;配置git&quot;">​</a></h2><p><img src="'+o+'" alt="An image"></p><h2 id="配置脚本和ssh" tabindex="-1">配置脚本和SSH <a class="header-anchor" href="#配置脚本和ssh" aria-label="Permalink to &quot;配置脚本和SSH&quot;">​</a></h2><p><img src="'+c+'" alt="An image"></p><h2 id="配置-githook" tabindex="-1">配置 githook <a class="header-anchor" href="#配置-githook" aria-label="Permalink to &quot;配置 githook&quot;">​</a></h2><p><img src="'+d+'" alt="An image"></p><h2 id="新增token" tabindex="-1">新增token <a class="header-anchor" href="#新增token" aria-label="Permalink to &quot;新增token&quot;">​</a></h2><p><img src="'+m+`" alt="An image"></p><h2 id="url地址" tabindex="-1">url地址 <a class="header-anchor" href="#url地址" aria-label="Permalink to &quot;url地址&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">http://zhangling:Otn2020!@58.210.34.82:2081/job/workspace/buildWithParameters(build:</span><span style="color:#C3E88D;"> 为无参数</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">或</span></span>
<span class="line"><span style="color:#FFCB6B;">http://zhangling:117fc6f19dfb205fec0e0beb3b4c03b4aa@58.210.34.82:2081/job/workspace/buildWithParameters(build:</span><span style="color:#C3E88D;"> 为无参数</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">报错</p><p>HTTP ERROR 403 No valid crumb was included in the request</p></div><p>进入容器安装 vim</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># centos用yum ubuntu用apt-get </span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#C3E88D;"> yum/apt-get</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> vim</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 如果提示没有 vim </span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#C3E88D;"> yum/apt-get</span><span style="color:#C3E88D;"> upgrade</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>修改文件 /usr/local/bin/jenkins.sh</p><p>找到exec java那行,添加</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">-Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION</span><span style="color:#C3E88D;">=</span><span style="color:#82AAFF;">true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>系统管理-&gt;全局安全配置 <img src="`+h+`" alt="An image"></p><div class="warning custom-block"><p class="custom-block-title">报错</p><p>Error 400 Nothing is submitted jenkins</p></div><p>需要使用buildWithParameters api</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span>http://zhangling:Otn2020!@58.210.34.82:2081/jenkins-k8s/job/otn-k8s-wsd-system-test/buildWithParameters</span></span>
<span class="line"><span>?harborRepository=172.26.25.7:8070</span></span>
<span class="line"><span>&amp;nacosRegister=172.26.25.4:8848</span></span>
<span class="line"><span>&amp;k8sFileDir=k8s</span></span>
<span class="line"><span>&amp;dockerFileDir=docker</span></span>
<span class="line"><span>&amp;workspaceDir=otn-k8s-wsd-system</span></span>
<span class="line"><span>&amp;module=taicang-wsd-system</span></span>
<span class="line"><span>&amp;version=3.2.0</span></span>
<span class="line"><span>&amp;git=http://58.210.34.82:2013/software-group/taicang-wsd.git</span></span>
<span class="line"><span>&amp;svcPort=12002</span></span>
<span class="line"><span>&amp;springbootPort=12002</span></span>
<span class="line"><span>&amp;deployCount=1</span></span>
<span class="line"><span>&amp;nacosNamespace=otn</span></span>
<span class="line"><span>&amp;nacosNamespaceGroup=TEST_GROUP</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="部署前端项目" tabindex="-1">部署前端项目 <a class="header-anchor" href="#部署前端项目" aria-label="Permalink to &quot;部署前端项目&quot;">​</a></h2><p>安装 nodejs</p><p><img src="`+b+'" alt="An image"></p><h2 id="点击-全局工具配置-1" tabindex="-1">点击-全局工具配置 <a class="header-anchor" href="#点击-全局工具配置-1" aria-label="Permalink to &quot;点击-全局工具配置&quot;">​</a></h2><p><img src="'+u+'" alt="An image"></p><h2 id="创建任务" tabindex="-1">创建任务 <a class="header-anchor" href="#创建任务" aria-label="Permalink to &quot;创建任务&quot;">​</a></h2><p><img src="'+_+'" alt="An image"></p><h2 id="jenkins-环境变量" tabindex="-1">jenkins 环境变量 <a class="header-anchor" href="#jenkins-环境变量" aria-label="Permalink to &quot;jenkins 环境变量&quot;">​</a></h2><p>BRANCH_NAME 对于多分支项目，这将被设置为正在构建的分支的名称，例如，如果您希望从master部署到生产环境而不是从feature分支部署；如果对应某种更改请求，则该名称通常是任意的（请参阅下面的CHANGE_ID和CHANGE_TARGET）；</p><p>CHANGE_ID 对于与某种更改请求相对应的多分支项目，这将被设置为更改ID，例如拉取请求编号（如果支持）;其他未设置；</p><p>CHANGE_URL 对于与某种更改请求相对应的多分支项目，这将被设置为更改URL(如果支持)；其他未设置；</p><p>CHANGE_TITLE 对于与某种更改请求相对应的多分支项目，这将被设置为更改的标题（如果支持）;其他未设置；</p><p>CHANGE_AUTHOR 对于与某种更改请求相对应的多分支项目，这将被设置为建议更改的作者的用户名（如果支持）;其他未设置；</p><p>CHANGE_AUTHOR_DISPLAY_NAME 对于与某种更改请求相对应的多分支项目，这将被设置为建议更改的作者的人名（如果支持）;其他未设置；</p><p>CHANGE_AUTHOR_EMAIL 对于与某种更改请求相对应的多分支项目，这将被设置为建议更改的作者的Email地址（如果支持）;其他未设置；</p><p>CHANGE_TARGET 对于与某种更改请求相对应的多分支项目，这将被设置为合并到的目标或者基础分支（如果支持）;其他未设置；</p><p>BUILD_NUMBER 当前构建的编号，例如“4674”等</p><p>#GIT_COMMIT - 当前的SHA</p><p>#GIT_BRANCH - 当前正在使用的分支的名称，例如“master”或“origin / foo”</p><p>#GIT_PREVIOUS_COMMIT - 来自同一分支的先前构建提交的SHA（第一次构建分支中的当前SHA）</p><p>#GIT_URL - 存储库远程URL</p><p>#GIT_URL_N - 存在多个遥控器时的存储库远程URL，例如GIT_URL_1，GIT_URL_2</p><p>#GIT_AUTHOR_EMAIL - 提交者/作者电子邮件</p><p>#GIT_COMMITTER_EMAIL - 提交者/作者电子邮件</p><p>BUILD_ID 当前构建的版本ID，与构建的BUILD_NUMBER相同</p><p>BUILD_DISPLAY_NAME 当前版本的显示名称，默认为“# 4674”，即BUILD_NUMBER。</p><p>JOB_NAME 即此版本的项目名称，例如“foo”或“foo / bar”。</p><p>JOB_BASE_NAME 此构建的项目的短名称剥离文件夹路径，例如“bar / foo”的“foo”。</p><p>BUILD_TAG</p><p>jenkins - $ {JOB_NAME} - $ {BUILD_NUMBER} JOB_NAME中的所有正斜杠（/）都用破折号（ - ）替换。方便地放入资源文件，jar文件等，以便于识别。</p><p>EXECUTOR_NUMBER 唯一编号，用于标识执行此构建的当前执行程序（在同一台计算机的执行程序中）。这是您在“构建执行程序状态”中看到的数字，但数字从0开始，而不是从1开始。</p><p>NODE_NAME 如果构建在代理上，则代理的名称; 如果在主版本上运行，则为“MASTER”；</p><p>NODE_LABELS 节点分配的空白分隔的标签列表。</p><p>WORKSPACE 作为工作空间分配给构建的目录的绝对路径。</p><p>JENKINS_HOME Jenkins用于存储数据的主节点上分配的目录的绝对路径。</p><p>JENKINS_URL Jenkins的完整URL，如http：// server：port / jenkins /（注意：仅在系统配置中设置Jenkins URL时可用）</p><p>BUILD_URL 此版本的完整URL，例如http：// server：port / jenkins / job / foo / 15 /（必须设置* Jenkins URL）</p><p>JOB_URL 该作业的完整URL，例如http：// server：port / jenkins / job / foo /（必须设置Jenkins URL）</p><p>GIT_COMMIT The commit hash being checked out.</p><p>GIT_PREVIOUS_COMMIT The hash of the commit last built on this branch, if any.</p><p>GIT_PREVIOUS_SUCCESSFUL_COMMIT The hash of the commit last successfully built on this branch, if any.</p><p>GIT_BRANCH 远程分支名称，如果有的话。</p><p>GIT_LOCAL_BRANCH 本地分支名称，如果有的话。</p><p>GIT_URL 远程git仓库的URL。如果有多个，将会是GIT_URL_1，GIT_URL_2等。</p><p>GIT_COMMITTER_NAME 配置的Git提交者名称（如果有的话）。</p><p>GIT_AUTHOR_NAME 配置的Git作者姓名（如果有的话）。</p><p>GIT_COMMITTER_EMAIL 配置的Git提交者电子邮件（如果有的话）。</p><p>GIT_AUTHOR_EMAIL 已配置的Git作者电子邮件（如果有）。</p><p>SVN_REVISION 当前工作区的Subversion版本号，例如“12345”</p><p>SVN_URL 当前工作区的Subversion版本号，例如“12345”</p>',87),E=[g];function A(I,T,R,C,v,U){return n(),s("div",null,E)}const B=a(k,[["render",A]]);export{f as __pageData,B as default};
