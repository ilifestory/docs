import{_ as s,c as a,o as n,a4 as p,a5 as l,a6 as e,a7 as o,a8 as c,a9 as t,aa as r,ab as i,ac as d,ad as m,ae as y,af as b,ag as u,ah as h,ai as C,aj as g,ak as E,al as D,am as _,an as v,ao as B,ap as F,aq as A,ar as f,as as w,at as x,au as k,av as P,aw as q,ax as j,ay as S,az as L,aA as T,aB as U,aC as $,aD as z,aE as I,aF as N,aG as R,aH as V}from"./chunks/framework.CCJHkvW2.js";const ss=JSON.parse('{"title":"Conda","description":"","frontmatter":{},"headers":[],"relativePath":"ai/anaconda.md","filePath":"ai/anaconda.md","lastUpdated":1713833896000}'),H={name:"ai/anaconda.md"},O=p(`<h1 id="conda" tabindex="-1">Conda <a class="header-anchor" href="#conda" aria-label="Permalink to &quot;Conda&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>1、关于Conda Conda是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换。 Conda 适用于 Linux，OS X 和Windows，也可以打包和分发其他软件。</p><p>Conda分为Anaconda和miniconda。Anaconda是包含一些常用包的版本，miniconda则是精简版。本文安装的是Anaconda。</p><p>Anaconda包括Conda、Python以及一大堆安装好的工具包，比如：numpy、pandas等</p><p>因此安装Anaconda的好处主要为以下几点：</p><p>1）包含conda：conda是一个环境管理器，其功能依靠conda包来实现，该环境管理器与pip类似，那有童鞋会问了：我能通过pip装conda包达到conda环境管理器一样的功能吗？答案是不能，conda包的实现离不开conda环境管理器。想详细知道两者异同可以去知乎遛一遛<a href="https://www.zhihu.com/question/279152320" target="_blank" rel="noreferrer">https://www.zhihu.com/question/279152320</a></p><p>2）安装大量工具包：Anaconda会自动安装一个基本的python，该python的版本Anaconda的版本有关。该python下已经装好了一大堆工具包，这对于科学分析计算是一大便利，你愿意费时耗力使用pip一个个包去装吗？</p><p>3）可以创建使用和管理多个不同的Python版本：比如想要新建一个新框架或者使用不同于Anoconda装的基本Python版本，Anoconda就可以实现同时多个python版本的管理</p><p>Conda具备如下几点优势：</p><p>Anaconda的base虚拟环境内安装了一大批常用的科学计算包，省去了用户逐个配置的繁琐过程。</p><p>Conda在安装包时可以自动发现冲突并尽量解出灵活解，方便了大型虚拟环境的配置。</p><p>Conda可以方便地导出虚拟环境配置并在另一台电脑上复现，便利了项目的迁移。</p><p>Anaconda介绍</p><ol><li>Anaconda是一个软件集合，自带了很多的模块的二进制文件（可以直接本地构建模块），并提供了conda和pip两个包管理工具。能够提供python解释器、模块与虚拟环境的管理。</li></ol><p>通过划分多个开发环境，为不同的环境设置不同版本的解释器和模块，比如区分python2与3的环境</p><ol start="2"><li>模块</li></ol><p>实现具体功能的工具包 比如想实现下载、上传功能，存储功能，可以寻找现成的网络的、数据库的模块可以来调用</p><p>(1)标准模块——python的开发者编写的模块</p><p>(2)第三方模块</p><ol start="3"><li>pip和conda包管理工具的对比</li></ol><p>(1)软件仓库的区别</p><p>conda使用anacconda.org软件仓库</p><p>pip使用pypi，python官网的软件仓库，模块数量多</p><p>(2)模块内容</p><p>conda都是二进制，可以直接读取</p><p>pip源码和二进制都有，源码需要编译会比较慢</p><p>(3)支持的语言</p><p>conda支持多语言</p><p>pip只支持python</p><p>(4)多环境</p><p>conda支持多环境</p><p>pip不支持</p><p>(5)依赖的检查</p><p>conda严格检查依赖项——类似于yum的区别</p><p>pip不严格检查</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#修改env默认目录</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --append</span><span style="color:#C3E88D;"> envs_dirs</span><span style="color:#C3E88D;"> D:</span><span style="color:#BABED8;">\\P</span><span style="color:#C3E88D;">rogramData</span><span style="color:#BABED8;">\\a</span><span style="color:#C3E88D;">naconda3</span><span style="color:#BABED8;">\\e</span><span style="color:#C3E88D;">nvs</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#添加镜像源</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --add</span><span style="color:#C3E88D;"> channels</span><span style="color:#C3E88D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#查看镜像源</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --show</span><span style="color:#C3E88D;"> channels</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#1、一般操作</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> -version</span><span style="color:#676E95;font-style:italic;"> #查看anaconda版本</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> update</span><span style="color:#C3E88D;"> conda</span><span style="color:#676E95;font-style:italic;"> #升级conda版本</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> update</span><span style="color:#C3E88D;"> pip</span><span style="color:#676E95;font-style:italic;"> #升级pip版本</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> update</span><span style="color:#C3E88D;"> anaconda</span><span style="color:#676E95;font-style:italic;"> #升级anaconda版本与所有软件包</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> env</span><span style="color:#C3E88D;"> list</span><span style="color:#676E95;font-style:italic;"> #查看所有虚拟环境</span></span>
<span class="line"><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#在linux和macos中</span></span>
<span class="line"><span style="color:#82AAFF;">source</span><span style="color:#C3E88D;"> activate</span><span style="color:#C3E88D;"> xx</span><span style="color:#676E95;font-style:italic;"> #进入xx环境</span></span>
<span class="line"><span style="color:#82AAFF;">source</span><span style="color:#C3E88D;"> deactivate</span><span style="color:#676E95;font-style:italic;"> #退出</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#在windows中</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> activate</span><span style="color:#C3E88D;"> xx</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> deactivate</span></span>
<span class="line"><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#2、创建虚拟环境</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> create</span><span style="color:#C3E88D;"> --name/-n</span><span style="color:#C3E88D;"> 新环境名</span><span style="color:#676E95;font-style:italic;"> #创建新环境</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> create</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> 新环境名</span><span style="color:#C3E88D;"> -c</span><span style="color:#C3E88D;"> 老环境名</span><span style="color:#676E95;font-style:italic;"> #克隆出一个新环境</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> remove</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> 环境名</span><span style="color:#C3E88D;"> --all</span><span style="color:#676E95;font-style:italic;"> #完整删除</span></span>
<span class="line"><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#3、操作模块</span></span>
<span class="line"><span style="color:#FFCB6B;">conda/pip</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> 环境名</span><span style="color:#C3E88D;"> 模块1,模块2,模块3</span><span style="color:#676E95;font-style:italic;"> #在环境中安装模块</span></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">base</span><span style="color:#89DDFF;">)</span><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> 模块1,模块2,模块3</span><span style="color:#676E95;font-style:italic;"> #在当前环境安装</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> list</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> 环境名</span><span style="color:#676E95;font-style:italic;"> #查看所有模块</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> uninstall</span><span style="color:#C3E88D;"> 模块名</span><span style="color:#676E95;font-style:italic;"> #只能删除conda安装的模块，pip安装的就用pip删除</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> 环境名</span><span style="color:#C3E88D;"> python=</span><span style="color:#F78C6C;">3.7</span><span style="color:#676E95;font-style:italic;"> #安装python，默认安装latest版本</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> create</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> demo</span><span style="color:#C3E88D;"> python=</span><span style="color:#F78C6C;">3.7</span><span style="color:#C3E88D;"> requests</span><span style="color:#676E95;font-style:italic;"> #在创建环境的同时安装pyhton解释器和requests模块</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="安装anaconda" tabindex="-1">安装Anaconda <a class="header-anchor" href="#安装anaconda" aria-label="Permalink to &quot;安装Anaconda&quot;">​</a></h2><p><a href="https://www.anaconda.com/download" target="_blank" rel="noreferrer">官方下载</a><a href="https://www.anaconda.com/download" target="_blank" rel="noreferrer">本地下载</a></p><p>Anaconda的安装分两种情况：</p><p>情况一：电脑现在没有装python或者现在装的可以卸载掉（装Anaconda时先卸python）；</p><p>情况二：电脑目前装了python，但想保留它；</p><p>情况一</p><p>Anaconda的下载</p><p>你可以根据你的操作系统是32位还是64位选择对应的版本到官网下载，但是官网下载龟速，建议到清华大学镜像站下载，多快又好省，</p><p>下载好Anaconda3后直接双击安装包即可，有几个地方需要注意</p><p><img src="`+l+'" alt="An image"></p><p><img src="'+e+'" alt="An image"></p><p><img src="'+o+'" alt="An image"></p><p><img src="'+c+'" alt="An image"></p><p><img src="'+t+'" alt="An image"></p><p>Finish后安装完毕</p><p>测试安装</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>若出现像这样的conda版本号即安装成功 <img src="'+r+`" alt="An image"></p><p>更改源</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> 包名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装需要的Python包非常方便，但是官方服务器在国外，下载龟速，国内清华大学提供了Anaconda的镜像仓库，我们把源改为清华大学镜像源</p><p>更改方法一</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --add</span><span style="color:#C3E88D;"> channels</span><span style="color:#C3E88D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --set</span><span style="color:#C3E88D;"> show_channel_urls</span><span style="color:#C3E88D;"> yes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>更改方法二：</p><p>打开 .condarc文件，直接简单粗暴的把下面的内容复制进去</p><p>打开C盘用户目录，我这里是</p><p>C:\\Users\\User</p><p>找到.condarc文件，里面长这样就成了</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">ssl_verify:</span><span style="color:#89DDFF;"> true</span></span>
<span class="line"><span style="color:#FFCB6B;">channels:</span></span>
<span class="line"><span style="color:#FFCB6B;">-</span><span style="color:#C3E88D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span></span>
<span class="line"><span style="color:#FFCB6B;">-</span><span style="color:#C3E88D;"> defaults</span></span>
<span class="line"><span style="color:#FFCB6B;">  show_channel_urls:</span><span style="color:#89DDFF;"> true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>更新包</p><p>更新时间较长，建议找个空余时间更新,不更新也可以，但为避免后续安装其他东西出错最好更一下，这里我就不更了，把命令贴出来</p><p>先更新conda</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> update</span><span style="color:#C3E88D;"> conda</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>再更新第三方所有包</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> upgrade</span><span style="color:#C3E88D;"> --all</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>创建和管理虚拟环境</p><p>第一种情况下Anaconda的安装到这里基本就结束了，后面关于虚拟环境部分属于Anaconda的使用了，这里会在第二种情况下再做介绍</p><p>情况二</p><p>情况二Anaconda的安装和情况一相同，但为保留自己安装的Python需要在安装Anaconda完成后进行操作</p><p>通过切换虚拟环境</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> info</span><span style="color:#C3E88D;"> -e</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> env</span><span style="color:#C3E88D;"> list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看Anaconda中当前存在的环境 <img src="`+i+'" alt="An image"></p><p>可以看到当前只存在一个叫做base的环境，这个环境即是Anaconda安装的Python版本</p><p>Anaconda装的版本是3.6.5的，假如我们想使用2.7版本的，这时可以通过创建虚拟环境来实现</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> create</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> python27</span><span style="color:#C3E88D;"> python=</span><span style="color:#F78C6C;">2.7</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>不用管是输入2.7.x，还是2.7，conda会为我们自动寻找2.7.x中的最新版本，再次查看Anaconda中存在的环境 <img src="'+d+'" alt="An image"></p><p>发现较之前多了一个python27，我们到Anaconda安装目录查看envs文件夹下的python27 <img src="'+m+'" alt="An image"></p><p>点进去看发现这不就是一个python安装过后的文件吗，说是创建虚拟环境，其实是真实的安装了Python2.7，我们切换至2.7版本的，</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">activate</span><span style="color:#C3E88D;"> python27</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>切换成功后前面多一个python27 <img src="'+y+'" alt="An image"></p><p>这时我们保留原生python就有了思路：</p><p>1）在Anaconda安装目录下的envi文件内新建一个名为python_ori的文件（没有envs文件夹就自己新建）</p><p>2）将原生python整个安装目录复制python_ori <img src="'+b+'" alt="An image"></p><p>3）全部复制后粘贴到python_ori <img src="'+u+'" alt="An image"></p><p>4）激活切换至原生的python <img src="'+h+'" alt="An image"></p><p>查询版本号 <img src="'+C+`" alt="An image"></p><p>没问题，3.7.4是原生版本，那是那个味哈哈。</p><h2 id="切换国内源" tabindex="-1">切换国内源 <a class="header-anchor" href="#切换国内源" aria-label="Permalink to &quot;切换国内源&quot;">​</a></h2><p>Conda会默认从国外服务器上下载包，这将导致下载速度非常缓慢，因此常切换成国内的清华源、阿里源，也就是官网的镜像网站。</p><p>安装Conda后在命令行中输入以下指令：（如果没有将conda添加到PATH，需要打开conda prompt）</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --add</span><span style="color:#C3E88D;"> channels</span><span style="color:#C3E88D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --add</span><span style="color:#C3E88D;"> channels</span><span style="color:#C3E88D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --add</span><span style="color:#C3E88D;"> channels</span><span style="color:#C3E88D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud//pytorch/</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --add</span><span style="color:#C3E88D;"> channels</span><span style="color:#C3E88D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --set</span><span style="color:#C3E88D;"> show_channel_urls</span><span style="color:#C3E88D;"> yes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>安装完成后可以查看conda当前源</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --get</span><span style="color:#C3E88D;"> channels</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="环境配置-非必须-我没有配置" tabindex="-1">环境配置（非必须，我没有配置）- <a class="header-anchor" href="#环境配置-非必须-我没有配置" aria-label="Permalink to &quot;环境配置（非必须，我没有配置）-&quot;">​</a></h2><p>主要有三个环境的配置:</p><p>Anaconda安装路径（为了Python检查正常）：D:\\anaconda3</p><p>安装路径\\Scripts（为了conda检查正常）：D:\\anaconda3\\Scripts</p><p>安装路径\\Library\\bin（加不加不知道有什么区别，不影响后边的检查）：D:\\anaconda3\\Library\\bin</p><p>上述三个环境变量都是通过：此电脑—右键—高级系统设置—环境变量—系统变量—双击path—新建变量即可。-</p><p><img src="`+g+'" alt="An image"></p><h2 id="默认安装pycharm" tabindex="-1">默认安装pycharm <a class="header-anchor" href="#默认安装pycharm" aria-label="Permalink to &quot;默认安装pycharm&quot;">​</a></h2><p>安装完成后，将虚拟环境导入到pycharm去进行编辑 <img src="'+E+'" alt="An image"></p><p><img src="'+D+'" alt="An image"> 创建新项目，选择conda环境——demo环境——选择创建</p><p><img src="'+_+'" alt="An image"></p><h2 id="conda-pycharm-django" tabindex="-1">Conda + Pycharm + Django <a class="header-anchor" href="#conda-pycharm-django" aria-label="Permalink to &quot;Conda + Pycharm + Django&quot;">​</a></h2><p>第一部分： Conda 命令行创建Django项目</p><p>打开 Anaconda Prompt 类似于 CMD，输入conda list可以查看到你目前所创建的虚拟环境 <img src="'+v+'" alt="An image"></p><p>目前就两个虚拟环境，一个是Anaconda Prompt自身的，另外一个是我创建的虚拟环境ll_env(根据Python编程：入门到实践)</p><p>创建虚拟环境：conda create -n 环境名 这里我又创建一个环境为sample的环境，如果担心没有创建成功可以，可以重复第一步，进行查看。（可以直接在base环境下创建环境，接下来为了方便演示使用ll_env这个虚拟环境） <img src="'+B+'" alt="An image"></p><p><img src="'+F+'" alt="An image"></p><p>激活环境：activate 环境名 在我这就是activate ll_env</p><p><img src="'+A+'" alt="An image"></p><p>移除环境：conda remove -n 环境名/--all 前者是移除单个环境，后者是移除所有环境</p><p>安装Django：激活环境后，可以查看该环境下的已有的环境变量，通过命令conda list，如果已有则不必安装。 安装命令：conda install django</p><p>创建项目：首先在你记得住的位置创建一个项目，先创建文件夹webDjango，然后再上面已激活的环境中进入该目录下。 <img src="'+f+'" alt="An image"></p><p>然后使用命令 django-admin startproject learning-log . 创建项目，webDjango则会出现除learning_logs（这是后面创建的文件夹）的其他文件。Windows中使用dir查看目录结构。注意空格和点不要忘记。 <img src="'+w+'" alt="An image"></p><p>创建数据库：通过命令：python manage.py migrate</p><p>查看项目：通过命令：python manage.py runserver <img src="'+x+'" alt="An image"></p><p>验证是否成功：输入网址<a href="http://127.0.0.1:8000/%E6%88%96%E8%80%85localhost:8000/%EF%BC%8C%E5%87%BA%E7%8E%B0%E4%BB%A5%E4%B8%8B%E5%9B%BE%E7%89%87%E8%A1%A8%E7%A4%BA%E6%88%90%E5%8A%9F%EF%BC%81" target="_blank" rel="noreferrer">http://127.0.0.1:8000/或者localhost:8000/，出现以下图片表示成功！</a><img src="'+k+`" alt="An image"></p><p>目录结构</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span>├── mysite</span></span>
<span class="line"><span>│   ├── manage.py        【项目的管理，启动项目，创建app，数据库的管理】【不要动】</span></span>
<span class="line"><span>│   └── mysite</span></span>
<span class="line"><span>│       ├── __init__.py</span></span>
<span class="line"><span>│       ├── asgi.py        【异步，接收网络请求】【不要动】</span></span>
<span class="line"><span>│       ├── settings.py        【项目的配置文件】【常常操作】</span></span>
<span class="line"><span>│       ├── urls.py        【URL与函数的对应关系】【常常操作】</span></span>
<span class="line"><span>│       └── wsgi.py        【同步，接收网络请求】【不要动】</span></span>
<span class="line"><span>└── mysite2</span></span>
<span class="line"><span>    ├── manage.py</span></span>
<span class="line"><span>    ├── mysite2</span></span>
<span class="line"><span>    │   ├── __init__.py</span></span>
<span class="line"><span>    │   ├── asgi.py</span></span>
<span class="line"><span>    │   ├── settings.py</span></span>
<span class="line"><span>    │   ├── urls.py</span></span>
<span class="line"><span>    │   └── wsgi.py</span></span>
<span class="line"><span>    └── templates</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>模块的目录结构</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span>app01</span></span>
<span class="line"><span>├── __init__.py</span></span>
<span class="line"><span>├── admin.py        【固定，不用动】django默认提供了admin后台管理。</span></span>
<span class="line"><span>├── apps.py        【固定，不用动】app启动类</span></span>
<span class="line"><span>├── migrations        【固定，不用动】数据库变更记录</span></span>
<span class="line"><span>│   └── __init__.py</span></span>
<span class="line"><span>├── models.py        【重要】对数据库操作</span></span>
<span class="line"><span>├── tests.py        【固定，不用动】单元测试</span></span>
<span class="line"><span>└── views.py        【重要】函数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>第二部分：在PyCharm中创建Django项目</p><p>首先PyCharm 一定要下载Professional，一定要下专业版，社区版没有Django这个选项。破解方法网上有很多，可以自行查找。</p><p>打开PyCharm，第一次打开直接有Crete Project，非第一次，则会打开最近的项目。进去以后点击File–&gt;new Project。第一个框为项目名；第二个框为创建虚拟环境，Location 为创建的虚拟环境的位置（位置要记住，等会要用到）；第三个找到你自己python安装位置中的python.exe；第四个框一定要勾选 <img src="`+P+'" alt="An image"> 创建成功后，如下所示： <img src="'+q+'" alt="An image"></p><p>查看下settings的环境，File–&gt;Settings–&gt;Project: 项目名,这里就是untitled，可以看下如下环境变量（这里看上去没啥问题，但是其实如果运行manage.py文件可能会报错） <img src="'+j+'" alt="An image"></p><p><img src="'+S+'" alt="An image"></p><p>运行manage.py文件 可能出现以下两个错误： 第一个错误：name ‘os’ is not defined <img src="'+L+'" alt="An image"> 这里报错了，是因为settings.py 中没有导入 os这个模块 ，在settings中导入：import od，再次运行，该错误解决 <img src="'+T+'" alt="An image"> 第二个错误： ImportError: DLL load failed while importing _sqlite3: 找不到指定的模块。 <img src="'+U+'" alt="An image"> 那是因为缺少sqlites3这个文件，可以去官网下载，链接如下：SQLite官网 选择适合你系统的。 <img src="'+$+'" alt="An image"></p><p>解压以后得到两个文件，将这两个文件复制到你项目的venv下的Scripts文件夹下，再次运行不会报错了 <img src="'+z+'" alt="An image"></p><p>结果如下： <img src="'+I+'" alt="An image"></p><p>这里显示的和在windows下命令窗口的不一样，原因是因为manage这个Run环境中的Parameters没有参数，输入runserver即可，再运行一次，发现结果变了。点击网页即可实现跳转。 <img src="'+N+'" alt="An image"><img src="'+R+'" alt="An image"><img src="'+V+`" alt="An image"></p><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> create</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> yolov8</span><span style="color:#C3E88D;"> python=</span><span style="color:#F78C6C;">3.8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> env</span><span style="color:#C3E88D;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#C3E88D;"> activate</span><span style="color:#C3E88D;"> yolov8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> -r</span><span style="color:#C3E88D;"> requirements.txt</span><span style="color:#C3E88D;"> -i</span><span style="color:#C3E88D;"> https://pypi.mirrors.ustc.edu.cn/simple/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> ultralytics==</span><span style="color:#F78C6C;">8.0.120</span><span style="color:#C3E88D;"> -i</span><span style="color:#C3E88D;"> https://pypi.mirrors.ustc.edu.cn/simple/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,144),W=[O];function G(J,M,Q,X,K,Y){return n(),a("div",null,W)}const as=s(H,[["render",G]]);export{ss as __pageData,as as default};
