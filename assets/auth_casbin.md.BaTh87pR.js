import{_ as a,c as t,o,a4 as e,j as r}from"./chunks/framework.CCJHkvW2.js";const q=JSON.parse('{"title":"Casbin","description":"","frontmatter":{},"headers":[],"relativePath":"auth/casbin.md","filePath":"auth/casbin.md","lastUpdated":null}'),s={name:"auth/casbin.md"},i=e('<h1 id="casbin" tabindex="-1">Casbin <a class="header-anchor" href="#casbin" aria-label="Permalink to &quot;Casbin&quot;">​</a></h1><p>参考文献(<a href="https://blog.csdn.net/m0_62475892/article/details/134676279" target="_blank" rel="noreferrer">https://blog.csdn.net/m0_62475892/article/details/134676279</a>)</p><p>Model语法</p><p>Model CONF 至少应包含四个部分: [request_definition], [policy_definition], [policy_effect], [matchers]。</p><p>如果 model 使用 RBAC, 还需要添加[role_definition]部分。</p><p>Model CONF 文件可以包含注释。注释以 # 开头， # 会注释该行剩余部分。</p><p>PERM元模型 subject是sub的访问实体，</p><p>object是obj访问的资源</p><p>action是act访问方法，</p><p>eft是策略结果，一般为空，默认指定allow，还可以指定deny</p><h2 id="p-policy策略" tabindex="-1">P（policy策略） <a class="header-anchor" href="#p-policy策略" aria-label="Permalink to &quot;P（policy策略）&quot;">​</a></h2><p>p={sub, obj, act} 或 p={sub, obj, act, eft}、策略一般存放到数据库，因为可能有很多。</p><p>语法如下</p><p>[policy_definition] p = sub, obj, act</p><h2 id="r-request请求" tabindex="-1">R（request请求） <a class="header-anchor" href="#r-request请求" aria-label="Permalink to &quot;R（request请求）&quot;">​</a></h2>',15),c=r("p",{"sub,obj,act":""},"r=",-1),p=e('<p>语法如下： [request_definition] r = sub, obj, act</p><h2 id="g-role角色" tabindex="-1">G（role角色） <a class="header-anchor" href="#g-role角色" aria-label="Permalink to &quot;G（role角色）&quot;">​</a></h2><p>[role_definition] g = _, _ g2 = _, _</p><h2 id="m-matchers匹配规则" tabindex="-1">M（matchers匹配规则） <a class="header-anchor" href="#m-matchers匹配规则" aria-label="Permalink to &quot;M（matchers匹配规则）&quot;">​</a></h2><p>requset和policy的匹配规则。m = r.sub == p.sub &amp;&amp; r.act == p.act &amp;&amp; r.obj == p.obj ,r是请求，p是策略。 所有满足该匹配表达式的eft都会进入分返回进入影响eft中处理。这个时候会把r和p按照规则进行匹配，从而返回匹配结果eft， 如果不定义，会返回allow，如果定义过了，会返回外面定义过的那个结果。</p><h2 id="e-effect影响" tabindex="-1">E（Effect影响） <a class="header-anchor" href="#e-effect影响" aria-label="Permalink to &quot;E（Effect影响）&quot;">​</a></h2><p>eft决定是否可以放行。 例如e = some (where (p.eft == allow))是由matchers匹配完成返回的结果返回allow与该eft匹配成功返回true才允许放行 或 例如e = some(where (p.eft == allow)) &amp;&amp; !some(where (p.eft == deny))。这些规则都是定死的</p>',7),l=[i,c,p];function n(_,h,d,b,f,u){return o(),t("div",null,l)}const P=a(s,[["render",n]]);export{q as __pageData,P as default};
